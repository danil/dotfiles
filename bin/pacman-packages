#!/bin/bash

install=${install:--1}
depclean=${depclean:--1}

while [ $# -gt 0 ]; do
    case "$1" in
        --install)
            let install=1
            ;;
        --depclean)
            let depclean=1
            ;;
        *)
            printf "***************************\n"
            printf "* Error: Invalid argument.*\n"
            printf "***************************\n"
            exit 1
    esac
    shift
done

# Inital packages (from linode image).
packages="$packages base" # core/base
packages="$packages curl" # core/curl
packages="$packages grub" # core/grub
packages="$packages haveged" # extra/haveged
packages="$packages inetutils" # core/inetutils
packages="$packages iotop" # community/iotop
packages="$packages linux" # core/linux
packages="$packages linux-firmware" # core/linux-firmware
packages="$packages lsof" # extra/lsof
packages="$packages man-db" # core/man-db
packages="$packages man-pages" # core/man-pages
packages="$packages mtr" # extra/mtr
packages="$packages nano" # core/nano
packages="$packages neovim" # community/neovim
packages="$packages net-tools" # core/net-tools
packages="$packages openssh" # core/openssh
packages="$packages pigz" # community/pigz: parallel gzip for multi-processor, multi-core
packages="$packages sudo" # core/sudo
packages="$packages sysstat" # community/sysstat
packages="$packages whois" # extra/whois

# Compile/make and so on.
# packages="$packages base-devel" # package group required to build PKGBUILD package from aur (arch user repository)
packages="$packages autoconf" # core/autoconf
packages="$packages automake" # core/automake
packages="$packages bison" # core/bison
packages="$packages fakeroot" # core/fakeroot
packages="$packages flex" # core/flex
packages="$packages gcc" # core/gcc
packages="$packages make" # core/make
packages="$packages patch" # core/patch
packages="$packages pkgconf" # core/pkgconf
packages="$packages which" # core/which

# Common user space packages.
# packages="$packages genius" # extra/genius: calculator
# packages="$packages hping3" # TODO: install from aur # a-la interactive ping https://github.com/antirez/hping
packages="$packages bash-completion" # extra/bash-completion: tab completion
packages="$packages bc" # extra/bc: used by bash prompt, console-based calculator utility
packages="$packages bind" # extra/bind: provides host utility
packages="$packages dos2unix" # community/dos2unix: convert text file line endings between CRLF and LF
packages="$packages emacs-nox" # community/emacs-nox
packages="$packages exim" # community/exim: send mail via sendmail and deliver local mail to /var/mail
packages="$packages fdupes" # community/fdupes: find duplicate files
packages="$packages git" # extra/git
packages="$packages htop" # extra/htop: extra/htop
packages="$packages jq" # community/jq: json console formater (used by emacs counsel-jq) <http://stedolan.github.io/jq/tutorial>, <http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json#15231463>
packages="$packages lftp" # extra/lftp: ftp client
packages="$packages mlocate" # core/mlocate
packages="$packages mosh" # community/mosh: ssh replacement
packages="$packages ncdu" # community/ncdu: diskspace usage is an baobab and gt5 replacement
packages="$packages pkgfile" # extra/pkgfile: searching files from packages in the official repositories
packages="$packages progress" # community/progress: progress bar for cp, rm, dd and so on https://github.com/Xfennec/progress
packages="$packages pwgen" # community/pwgen: password generator
packages="$packages ripgrep" # community/ripgrep: rg is an search tool a-la ag and ack replacement https://github.com/BurntSushi/ripgrep
packages="$packages rsync" # extra/rsync
packages="$packages syncthing" # community/syncthing: dropbox replacement: deb https://apt.syncthing.net/ syncthing release
packages="$packages the_platinum_searcher-bin" # kutkevich/the_platinum_searcher-bin: pt is an ag and ack replacement https://github.com/monochromegane/the_platinum_searcher
packages="$packages the_silver_searcher" # community/the_silver_searcher: ag is an ack replacement https://github.com/ggreer/the_silver_searcher
packages="$packages tig" # community/tig: git interactive cli
packages="$packages tmux" # community/tmux
packages="$packages tree" # extra/tree: displays an indented directory tree
packages="$packages uni2ascii" # kutkevich/uni2ascii: to/from unicode and to/from percent-encoding converter `echo -ne '%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82' | ascii2uni -q -aJ | uni2ascii -q -aJ`
packages="$packages wget" # extra/wget
packages="$packages zstd" # core/zstd: a-la gz/xz compression

# Server.
packages="$packages fail2ban" # community/fail2ban
packages="$packages pure-ftpd" # kutkevich/pure-ftpd: because vsftpd is annoying

# Arch.
packages="$packages namcap" # extra/namcap: analysis utility that checks binary packages and source PKGBUILDs for common mistakes <https://wiki.archlinux.org/index.php/Namcap>

# Nginx.
packages="$packages apache" # provides htpasswd utility is an nginx/apach basic authentication password generator
packages="$packages certbot-nginx" # community/certbot-nginx: nginx plugin for letâ€™s encrypt client
packages="$packages goaccess" # community/goaccess: analyze nginx/apache log in real-time
packages="$packages nginx" # extra/nginx

# Imapfilter.
packages="$packages imapfilter" # kutkevich/imapfilter: filter my gmail mail
packages="$packages lua" # extra/lua

# Golang.
packages="$packages go" # community/go

# Kubernetes/k8s.
packages="$packages docker" # community/docker
packages="$packages kubectl" # community/kubectl
# packages="$packages kubeadm-bin" # aur/kubeadm-bin
# packages="$packages kubelet-bin" # aur/kubelet-bin

packages=$(echo $packages | tr " " "\n" | sort | tr "\n" " ")

count=0
# <https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Install_packages_from_a_list>.
[[ $depclean -eq 1 ]] && count=$((count+1)) && pacman --remove --recursive --unneeded --verbose $(comm -23 <(pacman --query --quiet | sort) <(echo $packages | tr " " "\n" | sort))
[[ $install -eq 1 ]] && count=$((count+1)) && pacman --sync --needed --verbose $packages

[[ ${count} -lt 1 ]] && printf "usage: pacman-packages [--install] [--depclean]\n"
