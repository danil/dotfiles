#!/bin/bash

install=${install:--1}
depclean=${depclean:--1}

while [ $# -gt 0 ]; do
    case "$1" in
        --install)
            let install=1
            ;;
        --depclean)
            let depclean=1
            ;;
        *)
            printf "***************************\n"
            printf "* Error: Invalid argument.*\n"
            printf "***************************\n"
            exit 1
    esac
    shift
done

# Inital packages (from linode image).
packages="$packages base"
packages="$packages curl"
packages="$packages grub"
packages="$packages haveged"
packages="$packages inetutils"
packages="$packages iotop"
packages="$packages linux"
packages="$packages linux-firmware"
packages="$packages lsof"
packages="$packages man-db"
packages="$packages man-pages"
packages="$packages mtr"
packages="$packages nano"
packages="$packages net-tools"
packages="$packages openssh"
packages="$packages sudo"
packages="$packages sysstat"
packages="$packages vim"
packages="$packages whois"

# Compile/make and so on.
# packages="$packages base-devel" # package group required to build PKGBUILD package from aur (arch user repository)
packages="$packages autoconf"
packages="$packages automake"
packages="$packages bison"
packages="$packages fakeroot"
packages="$packages flex"
packages="$packages gcc"
packages="$packages make"
packages="$packages patch"
packages="$packages pkgconf"
packages="$packages which"

# Common user space packages.
packages="$packages bc" # extra/bc: used by bash prompt, console-based calculator utility
packages="$packages emacs-nox" # community/emacs-nox
packages="$packages git" # extra/git
packages="$packages htop" # extra/htop
packages="$packages mlocate" # core/mlocate
packages="$packages mosh" # ssh replacement
packages="$packages pigz" # parallel gzip for multi-processor, multi-core
packages="$packages pkgfile" # extra/pkgfile: searching files from packages in the official repositories
packages="$packages tmux" # community/tmux
packages="$packages zstd" # a-la gz/xz compression

# Arch.
packages="$packages namcap" # extra/namcap: analysis utility that checks binary packages and source PKGBUILDs for common mistakes <https://wiki.archlinux.org/index.php/Namcap>

# Server.
packages="$packages ntp" # extra/ntp

# Golang.
packages="$packages go" # community/go

# Kubernetes/k8s.
packages="$packages docker" # community/docker
packages="$packages kubectl" # community/kubectl
# packages="$packages kubeadm-bin" # aur/kubeadm-bin
# packages="$packages kubelet-bin" # aur/kubelet-bin

packages=$(echo $packages | tr " " "\n" | sort | tr "\n" " ")

count=0
# <https://wiki.archlinux.org/index.php/Pacman/Tips_and_tricks#Install_packages_from_a_list>.
[[ $depclean -eq 1 ]] && count=$((count+1)) && pacman --remove --recursive --unneeded --verbose $(comm -23 <(pacman --query --quiet | sort) <(echo $packages | tr " " "\n" | sort))
[[ $install -eq 1 ]] && count=$((count+1)) && pacman --sync --needed --verbose $packages

[[ ${count} -lt 1 ]] && printf "usage: pacman-packages [--install] [--depclean]\n"
