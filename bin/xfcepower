#!/bin/sh

# This file is part of Danil Kutkevich <danil@kutkevich.org> home.

USAGE="usage: ${CMD:=${0##*/}} --fix"

OPT_DRY=0

# Shell script options functions.
opttest () { { [ "$1" != "$EOL" ] && [ "$1" != '--' ]; } || optexit "missing argument" "$2"; } # avoid infinite loop
opthelp () { printf "%s\n" "$USAGE"; }
optexit () { printf >&2 "%s %s\n%s\n" "$1" "$2" "$USAGE"; exit 2; }

# Parse command-line options.
set -- "$@" "${EOL:=$(printf '\1\3\3\7')}"  # end-of-list marker
while [ "$1" != "$EOL" ]; do
    opt="$1"; shift

    case "$opt" in
        --fix       ) OPT_FIX=0; OPT_DRY=-1;;
        -h | --help ) opthelp; exit 0;;

        # Process special cases.
        --) while [ "$1" != "$EOL" ]; do set -- "$@" "$1"; shift; done;;    # parse remaining as positional
        --[!=]*=*) set -- "${opt%%=*}" "${opt#*=}" "$@";;                   # "--opt=arg"  ->  "--opt" "arg"
        -[A-Za-z0-9] | -*[!A-Za-z0-9]*) optexit "unknown option:" "$opt";;  # anything invalid like '-*'
        -?*) other="${opt#-?}"; set -- "${opt%"$other"}" "-${other}" "$@";; # "-abc"  ->  "-a" "-bc"
        *) set -- "$@" "$opt";;                                             # positional, rotate to the end
    esac
done; shift

if [ "$OPT_FIX" = 0 ]; then
    xfce4-power-manager --restart
fi

# Dry run.
if [ "$OPT_DRY" = 0 ]; then
    printf "%s\n" "$USAGE"
    exit 1
fi
