#!/bin/sh

# This file is part of Danil Kutkevich <danil@kutkevich.org> home.
# Homebrew <https://brew.sh>.

# install="$install bc" # used by bash prompt, console-based calculator utility
# install="$install goaccess" # analyze apache/nginx log in real-time
# install="$install grpc" # ?????????? gRPC client a-la curl https://github.com/grpc/grpc/blob/master/doc/command_line_tool.md
# install="$install hping" # hping3 a-la interactive ping https://github.com/antirez/hping
# install="$install nnn" # terminal file manager a-la mc/midnight commander https://github.com/jarun/nnn
# install="$install pigz" # parallel gzip for multi-processor, multi-core
install="$install ack" # a-la ag <https://github.com/beyondgrep/ack3>
install="$install bash" # Bourne again shell <https://gnu.org/software/bash>
install="$install bash-completion"
install="$install btop" # a-la htop
install="$install clib" # package manager for c program language libraries <https://github.com/clibs/clib>
install="$install colordiff" # colorize diff output <https://github.com/daveewart/colordiff>
install="$install convmv" # a-la iconv character encoding conversion util
install="$install csvkit" # conver csv to json `csvjson path/to/file.csv` <https://github.com/wireservice/csvkit/blob/master/docs/scripts/csvjson.rst>
install="$install curl" # a-la wget <https://github.com/curl/curl>
install="$install dos2unix" # convert text file line endings between CRLF and LF
install="$install erdtree" # disk space usage is an ncdu replacement
install="$install fd" # find replacement https://github.com/sharkdp/fd
install="$install fdupes" # identify or delete duplicate files https://github.com/adrianlopezroche/fdupes (used by emacs package https://github.com/ShuguangSun/find-dupes-dired)
install="$install flatbuffers" # a-la protobuf <https://github.com/google/flatbuffers>
install="$install htop" # a-la top
install="$install jq" # json console formater (used by emacs counsel-jq) <http://stedolan.github.io/jq/tutorial>, <http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json#15231463>
install="$install jsonnet" # https://github.com/google/jsonnet
install="$install mailutils" # is an gnu mailutils, reads local mail, provides /usr/bin/mail
install="$install ncdu" # disk space usage is an baobab and gt5 replacement
install="$install ninja" # a-la make build automation system
install="$install pwgen" # password generator
install="$install ripgrep" # rg a-la ag <https://github.com/BurntSushi/ripgrep>
install="$install the_platinum_searcher" # pt a-la ag <https://github.com/monochromegane/the_platinum_searcher>
install="$install the_silver_searcher" # ag <https://github.com/ggreer/the_silver_searcher>
install="$install tree" # displays an indented directory tree
install="$install uni2ascii" # to/from unicode and to/from percent-encoding converter `echo -ne '%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82' | ascii2uni -q -aJ | uni2ascii -q -aJ`
install="$install util-linux" # provides uni2ascii: to/from unicode and to/from percent-encoding converter `echo -ne '%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82' | ascii2uni -q -aJ | uni2ascii -q -aJ`
install="$install wdiff" # diff wordwise/word per word basis (a word is anything between whitespace)

# Data compression algorithms.
install="$install lz4" # a-la gz/xz compression, required by gnupg, ffmpeg and mpv
install="$install snappy" # a-la gz/xz compression, required by ffmpeg and mpv
install="$install zstd" # a-la gz/xz compression, required by gcc, curl, git, gnupg, rust, node, ffmpeg, mpv and feh

# Terminal emulator/multiplexer.
install="$install tmux" # a-la gnu screen
addrepo="$addrepo wez/wezterm-linuxbrew"
install="$install wezterm" # <https://github.com/wez/wezterm>

# Shell.
install="$install fish" # fish shell a-la bash
install="$install nushell"

# Network.
install="$install aria2" # `aria2c https://your.tld/path/to/your.file` download client a-la curl/wget
install="$install awscli" # `aws --version` # s3 command line client # default amazon aws ec2 client <https://github.com/aws/aws-cli>.
install="$install axel" # download client a-la curl/wget
install="$install freerdp" # xfreerdp is a remote desktop protocol for win https://github.com/freerdp/freerdp
install="$install gmailctl" # gmail filters generation
install="$install grpcurl" # gRPC client a-la curl https://github.com/fullstorydev/grpcurl
install="$install lftp" # ftp client
install="$install mosh" # ssh replacement
install="$install syncthing" # dropbox replacement: deb https://apt.syncthing.net syncthing release
install="$install wget" # a-la curl
install="$install whois"

# Vim.
install="$install vim" # vim is awesome, neovim is sucks
install="$install fzf" # fuzzy finder https://github.com/junegunn/fzf
install="$install fzy" # fuzzy finder https://github.com/jhawthorn/fzy
install="$install pick" # fuzzy finder https://github.com/mptre/pick
install="$install sk" # fuzzy finder https://github.com/lotabout/skim

# Emacs.
# install="$install emacs"
install="$install markdownlint-cli" # used/required used by emacs flycheck
install="$install shellcheck" # used by emacs flycheck
install="$install sql-lint" # used by emacs flycheck

# Git.
install="$install git"
install="$install git-flow" # <https://github.com/nvie/gitflow>
install="$install git-lfs" # <https://git-lfs.com>
install="$install tig" # git interactive client

# Docker.
install="$install docker" # OS-level virtualization to deliver software in packages called containers <https://github.com/moby/moby>
install="$install docker-compose" # <https://github.com/docker/compose>
install="$install docker-machine" # provides docker daemon <https://docs.docker.com/desktop>

# Golang programming language.
# install="$install go"
# install="$install gcc@5" # <https://stackoverflow.com/questions/59227456/go-1-13-gcc-5-not-in-path#62795608>
install="$install golangci-lint" # used by emacs a-la gometalinter
install="$install scc" # a-la sloc/cloc

# Python programming language <https://docs.brew.sh/Homebrew-and-Python>.
install="$install flake8" # python linter
install="$install proselint" # used/required by emacs flycheck
install="$install pylint" # used/required by emacs flycheck
install="$install python3" # provides pip (pip3)

# Programming languages.
install="$install dart-sdk" # dart programming language
install="$install deno" # js programming language <https://github.com/denoland/deno>
install="$install lua" # newer than apt version # the lua programming language https://github.com/lua/lua
install="$install node" # js programming language <https://github.com/nodejs/node>
install="$install ruby" # ruby programming language
install="$install rust" # <https://github.com/rust-lang/rust>
install="$install sbcl" # Steel Bank Common Lisp (SBCL) <https://github.com/sbcl/sbcl>

# HTTPd server.
install="$install http-server" # <https://github.com/http-party/http-server>
install="$install httpd" # provides htpasswd utility is an nginx/apach basic authentication password generator
install="$install nginx" # web/http server

# Databases.
install="$install keydb"
install="$install postgresql" # rdbms <https://wiki.postgresql.org/wiki/Homebrew>
install="$install redis"
install="$install tarantool"

# MySQL Vitess.
# install="$install mysql" # rdbms
install="$install vitess" # horizontal scaled clustering <https://vitess.io/docs/contributing/build-on-macos>, <https://github.com/vitessio/vitess>, <https://en.wikipedia.org/wiki/Shard_(database_architecture)>

# MongoDB.
addrepo="$addrepo mongodb/brew"
install="$install mongodb-community"

# Kafka.
install="$install kafka" # <https://github.com/apache/kafka>
addrepo="$addrepo redpanda-data/tap"
install="$install redpanda" # streaming data platform a-la kafka <https://github.com/redpanda-data/redpanda>

# # Manticore Search is a
# # High performance low resource consumption database for search written in C++.
# install="$install manticoresoftware/manticore/manticoresearch"
# install="$install manticoresoftware/manticore/manticore-extra"

# DevOps.
install="$install ansible" # <https://github.com/ansible/ansible>
install="$install k9s" # derailed/k9s/k9s:, k8s/kubernetes client <https://github.com/derailed/k9s>
install="$install kubernetes-cli" # provides k8s kubectl
install="$install netdata" # monitoring <https://github.com/netdata/netdata>

# X11/xorg/desktop.
# install="$install duplicity" # backuping
install="$install feh" # command line image viewer
install="$install ffmpeg" # watch webcam `ffplay -fs /dev/video0` https://github.com/ffmpeg/ffmpeg
install="$install marp-cli" # markdown to presentation (pdf) from command line https://github.com/marp-team/marp
install="$install mpv" # a-la mplayer replacement
install="$install xdotool" # ???
install="$install xsel" # copy selection in termina to the xorg clipboard (used by emacs and urxvt) <https://wiki.archlinux.org/index.php/rxvt-unicode#Automatic_Script_Management>

# Er ozn.
install="$install go@1.19"
install="$install libxml2" # provides xmllint
install="$install postgresql" # rdbms <https://wiki.postgresql.org/wiki/Homebrew>
install="$install redis"
install="$install vault"

if [ ! -z "$delrepo" ] && [ "$delrepo" != " " ]; then
    for repo in "$delrepo"; do
        brew untap $repo || exit 1
    done
fi

if [ ! -z "$addrepo" ] && [ "$addrepo" != " " ]; then
    for repo in "$addrepo"; do
        brew tap $repo || exit 1
    done
fi

if [ ! -z "$install" ] && [ "$install" != " " ]; then
    brew install $install || exit 1
fi
