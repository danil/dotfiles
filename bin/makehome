#!/bin/sh

# This file is part of Danil Kutkevich <danil@kutkevich.org> home.

USAGE="usage: ${CMD:=${0##*/}} [--deb] [--brew] [--update]"

# APT (deb/dpkg/apt-get/aptitude)
# <https://en.wikipedia.org/wiki/APT_(software)>.
DPKG_ADD_CLI="aptitude install --without-recommends"
DPKG_REM_CLI="aptitude remove"
# DPKG_DIS_CLI="systemctl disable"

# Homebrew
# <https://brew.sh>.
BREW_ADD_SRC_CLI="brew tap"
BREW_REM_SRC_CLI="brew untap"
BREW_ADD_CLI="brew install"

# Rust Cargo
# <https://github.com/rust-lang/cargo>,
# <https://doc.rust-lang.org/cargo>.
RUST_ADD_CLI="cargo install"
RUST_UPD_CLI="cargo install --force"

OPT_ALL=0
OPT_JOBS=`grep -c ^processor /proc/cpuinfo` OPT_JOBS=${OPT_JOBS:-1}

# Options functions.
optexit () { printf >&2 "%s %s\n%s\n" "$1" "$2" "$USAGE"; exit 2; }
optcheck () { { [ "$1" != "$EOL" ] && [ "$1" != '--' ]; } || optexit "missing argument" "$2"; } # avoid infinite loop
opthelp () { printf "%s\n" "$USAGE"; }

# Parse command-line options.
set -- "$@" "${EOL:=$(printf '\1\3\3\7')}"  # end-of-list marker
while [ "$1" != "$EOL" ]; do
    opt="$1"; shift

    case "$opt" in
        --deb          ) OPT_DPKG=0; OPT_ALL=-1;;
        --brew         ) OPT_BREW=0; OPT_ALL=-1;;
        --rust         ) OPT_RUST=0; OPT_ALL=-1;;
        --update       ) OPT_UPDATE=0;;
        --jobs         ) optcheck "$1" "$opt"; OPT_JOBS="$1"; shift;;
        -v | --verbose ) OPT_VERBOSE=0;;
        -h | --help    ) opthelp; exit 0;;

        # Process special cases.
        --) while [ "$1" != "$EOL" ]; do set -- "$@" "$1"; shift; done;;   # parse remaining as positional
        --[!=]*=*) set -- "${opt%%=*}" "${opt#*=}" "$@";;                  # "--opt=arg"  ->  "--opt" "arg"
        -[A-Za-z0-9] | -*[!A-Za-z0-9]*) optexit "unknown option:" "$opt";; # anything invalid like '-*'
        -?*) other="${opt#-?}"; set -- "${opt%$other}" "-${other}" "$@";;  # "-abc"  ->  "-a" "-bc"
        *) set -- "$@" "$opt";;                                            # positional, rotate to the end
    esac
done; shift

# TODO: install ntp

# TODO: investigate homebrew packages
# cask
# httpie
# kubernetes-cli
# leiningen
# md5sha1sum
# p7zip 7-Zip
# perl
# pwgen
# rabbitmq
# ripgrep
# shellcheck
# sqlite
# the_silver_searcher

# Common packages.
# BREW_ADD="$BREW_ADD bash-completion" # programmable completion # conflicts with util-linux
# BREW_ADD="$BREW_ADD bc" # used by bash prompt, console-based calculator utility
# BREW_ADD="$BREW_ADD goaccess" # analyze apache/nginx log in real-time
# BREW_ADD="$BREW_ADD grpc" # ?????????? gRPC client a-la curl https://github.com/grpc/grpc/blob/master/doc/command_line_tool.md
# BREW_ADD="$BREW_ADD hping" # hping3 a-la interactive ping <https://github.com/antirez/hping> # DPKG_ADD="$DPKG_ADD hping3" # a-la interactive ping https://github.com/antirez/hping
# BREW_ADD="$BREW_ADD pigz" # DPKG_ADD="$DPKG_ADD pigz" # parallel gzip for multi-processor, multi-core
# DPKG_ADD="$DPKG_ADD inxi" # inxi --graphics <https://github.com/smxi/inxi>
# DPKG_ADD="$DPKG_ADD jp2a" # converts jpg to ascii
# DPKG_ADD="$DPKG_ADD linux-generic-hwe-20.04-edge" # linxu/kernel 5.11 for ubuntu 20.04
# DPKG_ADD="$DPKG_ADD makepasswd" # password generator
# DPKG_ADD="$DPKG_ADD protobuf-compiler" # version to old/outdated(
# RUST_ADD="$RUST_ADD czkawka_cli" # find duplicates, empty folders
# RUST_ADD="$RUST_ADD ddh" # duplicate file finder https://github.com/darakian/ddh
# RUST_ADD="$RUST_ADD exa" # list files/directories, is an ls replacement https://github.com/ogham/exa
# RUST_ADD="$RUST_ADD fclones" # duplicate file finder https://github.com/pkolaczk/fclones
# RUST_ADD="$RUST_ADD fselect" # find files with sql-like queries https://github.com/jhspetersson/fselect
# RUST_ADD="$RUST_ADD xsv" # csv cli (indexing, slicing, analyzing, splitting and joining) <https://github.com/BurntSushi/xsv>
BREW_ADD="$BREW_ADD ack" # a-la ag <https://github.com/beyondgrep/ack3>
BREW_ADD="$BREW_ADD bash" # Bourne again shell <https://gnu.org/software/bash>
BREW_ADD="$BREW_ADD clib" # package manager for c program language libraries <https://github.com/clibs/clib>
BREW_ADD="$BREW_ADD colordiff" # colorize diff output <https://github.com/daveewart/colordiff>
BREW_ADD="$BREW_ADD convmv" # a-la iconv character encoding conversion util # DPKG_ADD="$DPKG_ADD convmv" # a-la iconv character encoding conversion util
BREW_ADD="$BREW_ADD csvkit" # conver csv to json `csvjson path/to/file.csv` <https://github.com/wireservice/csvkit/blob/master/docs/scripts/csvjson.rst>
BREW_ADD="$BREW_ADD curl" # a-la wget <https://github.com/curl/curl> # DPKG_ADD="$DPKG_ADD curl" # a-la wget <https://github.com/curl/curl>
BREW_ADD="$BREW_ADD dos2unix" # convert text file line endings between CRLF and LF # DPKG_ADD="$DPKG_ADD dos2unix" # convert text file line endings between CRLF and LF
BREW_ADD="$BREW_ADD fd" # RUST_ADD="$RUST_ADD fd-find" # find replacement https://github.com/sharkdp/fd
BREW_ADD="$BREW_ADD flatbuffers" # a-la protobuf <https://github.com/google/flatbuffers>
BREW_ADD="$BREW_ADD jsonnet" # https://github.com/google/jsonnet
BREW_ADD="$BREW_ADD mailutils" # DPKG_ADD="$DPKG_ADD mailutils" # is an gnu mailutils, reads local mail, provides /usr/bin/mail
BREW_ADD="$BREW_ADD ninja" # a-la make build automation system
BREW_ADD="$BREW_ADD pwgen" # DPKG_ADD="$DPKG_ADD pwgen" # password generator
BREW_ADD="$BREW_ADD ripgrep" # RUST_ADD="$RUST_ADD ripgrep" # rg is a search tool a-la ag (silver searcher) <https://github.com/burntsushi/ripgrep>
BREW_ADD="$BREW_ADD the_platinum_searcher" # pt a-la ag <https://github.com/monochromegane/the_platinum_searcher>
BREW_ADD="$BREW_ADD the_silver_searcher" # DPKG_ADD="$DPKG_ADD silversearcher-ag" # the silver searcher (ag) is a code-searching tool a-la ack <https://github.com/ggreer/the_silver_searcher> # DPKG_ADD="$DPKG_ADD automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev" # compiltime dependency <https://github.com/ggreer/the_silver_searcher#building-from-source>
BREW_ADD="$BREW_ADD tree" # DPKG_ADD="$DPKG_ADD tree" # displays an indented directory tree
BREW_ADD="$BREW_ADD uni2ascii" # DPKG_ADD="$DPKG_ADD uni2ascii" # to/from unicode and to/from percent-encoding converter `echo -ne '%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82' | ascii2uni -q -aJ | uni2ascii -q -aJ`
BREW_ADD="$BREW_ADD util-linux" # DPKG_ADD="$DPKG_ADD uuid-runtime" # DPKG_ADD="$DPKG_ADD whois" # provides uuidgen (uuid generator) also provides uni2ascii (to/from unicode and to/from percent-encoding converter `echo -ne '%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82' | ascii2uni -q -aJ | uni2ascii -q -aJ`) <https://github.com/util-linux/util-linux> , <https://serverfault.com/questions/103359/how-to-create-a-uuid-in-bash#103366>
BREW_ADD="$BREW_ADD wdiff" # diff wordwise/word per word basis (a word is anything between whitespace)
DPKG_ADD="$DPKG_ADD apt-transport-https" # required by custom ppa
DPKG_ADD="$DPKG_ADD bc" # used by bash prompt, console-based calculator utility
DPKG_ADD="$DPKG_ADD bind9-host" # automatic/dependency: dns/host lookup utility
DPKG_ADD="$DPKG_ADD genius" # calculator
DPKG_ADD="$DPKG_ADD libpci-dev libnl-3-dev libnl-genl-3-dev gettext libgettextpo-dev autopoint gettext libncurses5-dev libncursesw5-dev libtool-bin dh-autoreconf autoconf-archive pkg-config" # powertop diagnose power consumption https://github.com/fenrus75/powertop#build-dependencies
DPKG_ADD="$DPKG_ADD lm-sensors" # FIXME: is the cpu temperate by ls sensors used by plain status or by slstatus?
DPKG_ADD="$DPKG_ADD logrotate"
DPKG_ADD="$DPKG_ADD lynx" # html to plain text `curl https://your.tld/ | lynx --stdin --dump`
DPKG_ADD="$DPKG_ADD mlocate" # locate/updatedb
DPKG_ADD="$DPKG_ADD net-tools" # ifconfig cli
DPKG_ADD="$DPKG_ADD opensmtpd" # send mail via /usr/bin/sendmail and deliver local mail to /var/mail a-la exim replacement
DPKG_ADD="$DPKG_ADD openssh-server"
RUST_ADD="$RUST_ADD cpc" # cli calculator/units converter https://github.com/probablykasper/cpc

# Data compression algorithms.
BREW_ADD="$BREW_ADD lz4" # a-la gz/xz compression, required by gnupg, ffmpeg and mpv
BREW_ADD="$BREW_ADD snappy" # a-la gz/xz compression, required by ffmpeg and mpv
BREW_ADD="$BREW_ADD zstd" # a-la gz/xz compression, required by gcc, curl, git, gnupg, rust, node, ffmpeg, mpv and feh
DPKG_ADD="$DPKG_ADD zstd" # a-la gz/xz compression

# Network.
BREW_ADD="$BREW_ADD aria2" # `aria2c https://your.tld/path/to/your.file` download client a-la curl/wget
BREW_ADD="$BREW_ADD awscli" # `aws --version` # s3 command line client # default amazon aws ec2 client <https://github.com/aws/aws-cli>.
BREW_ADD="$BREW_ADD axel" # download client a-la curl/wget
BREW_ADD="$BREW_ADD freerdp" # xfreerdp is a remote desktop protocol for win https://github.com/freerdp/freerdp
BREW_ADD="$BREW_ADD gmailctl" # gmail filters generation
BREW_ADD="$BREW_ADD grpcurl" # gRPC client a-la curl https://github.com/fullstorydev/grpcurl
BREW_ADD="$BREW_ADD lftp" # DPKG_ADD="$DPKG_ADD lftp" # ftp client <https://github.com/lavv17/lftp>
BREW_ADD="$BREW_ADD mosh" # DPKG_ADD="$DPKG_ADD mosh" # ssh replacement <https://github.com/mobile-shell/mosh>
BREW_ADD="$BREW_ADD syncthing" # DPKG_ADD="$DPKG_ADD syncthing" # dropbox replacement: deb <https://apt.syncthing.net> syncthing release
BREW_ADD="$BREW_ADD wget" # a-la curl
BREW_ADD="$BREW_ADD whois"

# Git.
# RUST_ADD="$RUST_ADD gitui" # git tui, is an tig replacement https://github.com/extrawurst/gitui
BREW_ADD="$BREW_ADD git" # distributed version/revision control system <https://github.com/git/git> # DPKG_ADD="$DPKG_ADD git"
BREW_ADD="$BREW_ADD git-flow" # <https://github.com/nvie/gitflow>
BREW_ADD="$BREW_ADD git-lfs" # <https://git-lfs.com>
BREW_ADD="$BREW_ADD tig" # DPKG_ADD="$DPKG_ADD tig" # git interactive client

# *nix shell/terminal emulator/multiplexer.
# BREW_ADD="$BREW_ADD nnn" # terminal file manager a-la mc/midnight commander https://github.com/jarun/nnn
# RUST_ADD="$RUST_ADD bat" # print file lines with syntax highlighting, is an cat replacement
# RUST_ADD="$RUST_ADD racer" # compilation failing all the time <https://github.com/racer-rust/racer/issues/868#issuecomment-459017685>, rust code completion https://github.com/phildawes/racer
BREW_ADD="$BREW_ADD fish" # fish shell a-la bash
BREW_ADD="$BREW_ADD nushell" # <https://github.com/nushell/nushell>
BREW_ADD="$BREW_ADD tmux" # terminal multiplexer a-la gnu screen # DPKG_ADD="$DPKG_ADD pkg-config libevent-dev libncurses-dev" # os wide/from source compiltime dependency # DPKG_ADD="$DPKG_ADD byacc" # also byacc: preventing compiltime dependency error: ./etc/ylwrap: line 175: yacc: command not found
BREW_ADD="$BREW_ADD wezterm" BREW_ADD_SRC="$BREW_ADD_SRC wez/wezterm-linuxbrew" # gpu-accelerated cross-platform terminal and multiplexer written in rust <https://github.com/wez/wezterm>
BREW_ADD="$BREW_ADD xsel" # DPKG_ADD="$DPKG_ADD xsel" # copy selection in termina to the xorg clipboard (used by emacs and urxvt) <https://wiki.archlinux.org/index.php/rxvt-unicode#Automatic_Script_Management>
DPKG_ADD="$DPKG_ADD cmake libfontconfig1-dev libfreetype6-dev libxcb-xfixes0-dev libxkbcommon-dev pkg-config" # alacritty dependency, alacritty is a terminal emulator a-la st/xterm <https://github.com/alacritty/alacritty/blob/master/INSTALL.md#debianubuntu>
DPKG_ADD="$DPKG_ADD xterm" # backup/fallback terminal additional to the st/stterm/alacritty
RUST_ADD="$RUST_ADD alacritty" # terminal/console emulator a-la st/xterm https://github.com/alacritty/alacritty

# Vim.
BREW_ADD="$BREW_ADD fzf" # fuzzy finder https://github.com/junegunn/fzf
BREW_ADD="$BREW_ADD fzy" # fuzzy finder https://github.com/jhawthorn/fzy
BREW_ADD="$BREW_ADD pick" # fuzzy finder https://github.com/mptre/pick
BREW_ADD="$BREW_ADD sk" # fuzzy finder https://github.com/lotabout/skim
BREW_ADD="$BREW_ADD vim" # DPKG_ADD="$DPKG_ADD vim" # vim is awesome a-la emacs, neovim is sucks <https://github.com/vim/vim>

# Emacs <https://github.com/emacs-mirror/emacs>.
# BREW_ADD="$BREW_ADD emacs" # DPKG_ADD="$DPKG_ADD emacs-nox" # instead compiled from source into ~/.local/usr/local/bin # TODO: maybe use homebrew?
# DPKG_ADD="$DPKG_ADD libgif-dev" # compiltime dependency X11 <https://www.emacswiki.org/emacs/BuildingEmacs#h5o-4>
BREW_ADD="$BREW_ADD fdupes" # identify or delete duplicate files https://github.com/adrianlopezroche/fdupes (used by emacs package https://github.com/ShuguangSun/find-dupes-dired)
BREW_ADD="$BREW_ADD jq" # json console formater (used by emacs counsel-jq) <http://stedolan.github.io/jq/tutorial>, <http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json#15231463> # DPKG_ADD="$DPKG_ADD jq" # json console formater (used by emacs counsel-jq) <http://stedolan.github.io/jq/tutorial>, <http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json#15231463>
BREW_ADD="$BREW_ADD markdownlint-cli" # used/required used by emacs flycheck
BREW_ADD="$BREW_ADD shellcheck" # DPKG_ADD="$DPKG_ADD shellcheck" # used by emacs flycheck
BREW_ADD="$BREW_ADD sql-lint" # used by emacs flycheck
DPKG_ADD="$DPKG_ADD aspell-en" # used by emacs auto complete
DPKG_ADD="$DPKG_ADD aspell-ru" # used by emacs auto complete
DPKG_ADD="$DPKG_ADD emacs-el" # find/navigate elisp function source code <https://unix.stackexchange.com/questions/73100/how-to-attach-elisp-function-source-code-in-emacs>
DPKG_ADD="$DPKG_ADD libgnutls28-dev" # compiltime dependency <https://stackoverflow.com/questions/52722096/build-emacs-and-gnutls-not-found#60430406>

# Homebrew <https://docs.brew.sh/Homebrew-on-Linux#requirements>.
# DPKG_ADD="$DPKG_ADD git" # instead installed from the homebrew
DPKG_ADD="$DPKG_ADD build-essential"
DPKG_ADD="$DPKG_ADD curl"
DPKG_ADD="$DPKG_ADD file"
DPKG_ADD="$DPKG_ADD procps" # /proc file system utilities

# Flatpak.
DPKG_ADD="$DPKG_ADD flatpak" # PMS
DPKG_ADD="$DPKG_ADD gnome-software-plugin-flatpak" # Flatpak support for GNOME software

# # Basher is a bash/shell/functions package manager
# # <https://github.com/basherpm/basher>.
# DPKG_ADD="$DPKG_ADD bash"
# DPKG_ADD="$DPKG_ADD coreutils"

# C/C++ compile/make common dependencies.
DPKG_ADD="$DPKG_ADD automake" # required by tmux/xchainkeys
DPKG_ADD="$DPKG_ADD build-essential" # compiler?
DPKG_ADD="$DPKG_ADD devscripts" # ???
DPKG_ADD="$DPKG_ADD make" # required by all)
DPKG_ADD="$DPKG_ADD valgrind" # find memory leaks https://www.valgrind.org/docs/manual/quick-start.html

# Clang compiler front end for the C, C++, Objective-C (depends on LLVM).
BREW_ADD="$BREW_ADD clang-format" # DPKG_ADD="$DPKG_ADD clang" # used by emacs (company-clang backend) # c, c++ and objective-c compiler based on llvm <https://github.com/llvm/llvm-project>
BREW_ADD="$BREW_ADD llvm" # <https://github.com/llvm/llvm-project>

# Golang programming language.
# BREW_ADD="$BREW_ADD gcc@5" # <https://stackoverflow.com/questions/59227456/go-1-13-gcc-5-not-in-path#62795608>
# BREW_ADD="$BREW_ADD go"
# DPKG_ADD="$DPKG_ADD golang"
# DPKG_ADD="$DPKG_ADD golang-1.17-doc golang-1.17-go golang-1.17-src"
# DPKG_ADD="$DPKG_ADD golang-race-detector-runtime" # FIXME: where is race detector for the go 1.15?
BREW_ADD="$BREW_ADD golangci-lint" # used by emacs a-la gometalinter

# Rust programming language <https://github.com/rust-lang/rust>.
# DPKG_ADD="$DPKG_ADD libgtk-3-dev" # required by fontfinder https://github.com/mmstick/fontfinder
# DPKG_ADD="$DPKG_ADD libudev-dev" # required by fclones, is an duplicate file finder https://github.com/pkolaczk/fclones
# DPKG_ADD="$DPKG_ADD libwebkit2gtk-4.0-dev" # required by fontfinder https://github.com/mmstick/fontfinder
# DPKG_ADD="$DPKG_ADD libxcb-composite0-dev" # required by gitui a-la tig https://github.com/extrawurst/gitui
# RUST_ADD="$RUST_ADD rustfmt" # rust code pretty formating <https://github.com/rust-lang-nursery/rustfmt>
BREW_ADD="$BREW_ADD rust"

# JS/JavaScript/Nodejs.
# DPKG_ADD="$DPKG_ADD curl dirmngr apt-transport-https lsb-release ca-certificates" # required by nodesource.com's ppa
BREW_ADD="$BREW_ADD deno" # RUST_ADD="$RUST_ADD deno --locked" # js programming language, runtime a-la node.js <https://deno.land>, <https://github.com/denoland/deno>
BREW_ADD="$BREW_ADD node" # DPKG_ADD="$DPKG_ADD nodejs" # js programming language <https://github.com/nodejs/node>

# Python programming language
# <https://github.com/python/cpython>,
# <https://docs.brew.sh/Homebrew-and-Python>.
BREW_ADD="$BREW_ADD flake8" # python linter
BREW_ADD="$BREW_ADD proselint" # used/required by emacs flycheck
BREW_ADD="$BREW_ADD pylint" # used/required by emacs flycheck
BREW_ADD="$BREW_ADD python3" # DPKG_ADD="$DPKG_ADD python3" # provides pip (pip3) # DPKG_ADD="$DPKG_ADD python3-pip" # DPKG_ADD="$DPKG_ADD python-pip" # python 2 pip no longer supported by ubuntu

# Ruby programming language
# <https://github.com/ruby/ruby>.
# DPKG_ADD="$DPKG_ADD libssl1.0-dev" # required by ruby 2.3.7 (libssl1.0-dev conflicts with libssl-dev)
# DPKG_ADD="$DPKG_ADD libreadline-dev" # required by ruby 2.6.3
# DPKG_ADD="$DPKG_ADD libsqlite3-dev" # required by sqlite3 which required by mailcatcher
# DPKG_ADD="$DPKG_ADD libssl-dev" # required by ruby 2.6.3 (libssl-dev conflicts with libssl1.0-dev)
BREW_ADD="$BREW_ADD ruby"

# Dart programming language
# <https://github.com/dart-lang/sdk>,
# <https://dart.dev/get-dart#install-using-apt-get>.
# DPKG_ADD="$DPKG_ADD apt-transport-https"
# DPKG_ADD="$DPKG_ADD dart"
BREW_ADD="$BREW_ADD dart-sdk"

# Programming languages.
# RUST_ADD="$RUST_ADD tokei" # cloc metric (count lines of code) <https://github.com/Aaronepower/tokei>
BREW_ADD="$BREW_ADD lua" # newer than apt version # the lua programming language https://github.com/lua/lua
BREW_ADD="$BREW_ADD sbcl" # Steel Bank Common Lisp (SBCL) <https://github.com/sbcl/sbcl>
BREW_ADD="$BREW_ADD scc" # a-la sloc/cloc

# Web/HTTPd server.
# DPKG_ADD="$DPKG_ADD goaccess" # instead installed from the homebrew # analyze nginx/apache log in real-time
BREW_ADD="$BREW_ADD http-server" # <https://github.com/http-party/http-server>
BREW_ADD="$BREW_ADD httpd" # provides htpasswd utility is an nginx/apache basic authentication password generator # DPKG_ADD="$DPKG_ADD apache2-utils" # provides htpasswd utility is an nginx/apache basic authentication password generator
BREW_ADD="$BREW_ADD nginx" # web/http server a-la apache # DPKG_ADD="$DPKG_ADD nginx" DPKG_DIS="$DPKG_DIS nginx" # web/http server a-la apache

# PostgreSQL is a RDBMS a-la MySQL
# <https://github.com/postgres/postgres>,
# <https://wiki.postgresql.org/wiki/Homebrew>.
# DPKG_ADD="$DPKG_ADD pgcenter" # postgresql command-line tool https://github.com/lesovsky/pgcenter/releases install: dpkg --install path/to/pgcenter.deb
# DPKG_ADD="$DPKG_ADD postgresql-14" # DPKG_DIS="$DPKG_DIS postgresql" # `deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main` <https://www.postgresql.org/download/linux/ubuntu>
# DPKG_ADD="$DPKG_ADD postgresql-server-dev-14" # required by pg_activity is an postgresql activity monitoring <https://github.com/dalibo/pg_activity>
BREW_ADD="$BREW_ADD postgresql"

# MySQL Vitess.
# BREW_ADD="$BREW_ADD mysql" # rdbms
BREW_ADD="$BREW_ADD vitess" # horizontal scaled clustering <https://vitess.io/docs/contributing/build-on-macos>, <https://github.com/vitessio/vitess>, <https://en.wikipedia.org/wiki/Shard_(database_architecture)>

# MongoDB.
# DPKG_ADD="$DPKG_ADD gnupg" # required by mongodb <https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu>
# DPKG_ADD="$DPKG_ADD mongodb-org" DPKG_DIS="$DPKG_DIS mongod" # latest stable version of the mongodb server
BREW_ADD="$BREW_ADD mongodb-community"
BREW_ADD_SRC="$BREW_ADD_SRC mongodb/brew"

# Kafka.
BREW_ADD="$BREW_ADD kafka" # <https://github.com/apache/kafka>
BREW_ADD_SRC="$BREW_ADD_SRC redpanda-data/tap"
BREW_ADD="$BREW_ADD redpanda" # streaming data platform a-la kafka <https://github.com/redpanda-data/redpanda>

# # Manticore Search is a
# # High performance low resource consumption database for search written in C++.
# BREW_ADD="$BREW_ADD manticoresoftware/manticore/manticoresearch"
# BREW_ADD="$BREW_ADD manticoresoftware/manticore/manticore-extra"

# # Elasticsearch <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html>.
# DPKG_ADD="$DPKG_ADD elasticsearch" # felix `deb https://artifacts.elastic.co/packages/5.x/apt stable main` elasticsearch 5 <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html>, # apt-transport-https required by elasticsearch ppa <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html#deb-repo>
# DPKG_ADD="$DPKG_ADD apt-transport-https"

# Databases.
BREW_ADD="$BREW_ADD keydb"
BREW_ADD="$BREW_ADD redis"
BREW_ADD="$BREW_ADD tarantool"

# Docker OS-level virtualization to deliver software in packages called containers
# <https://github.com/moby/moby>,
# <https://docs.docker.com/install/linux/docker-ce/ubuntu>.
# DPKG_ADD="$DPKG_ADD golang-docker-credential-helpers" # credential helper stores encrypted passwords in d-bus secret service instead of unencrypted password in plain file <https://docs.docker.com/engine/reference/commandline/login/#credentials-store>
BREW_ADD="$BREW_ADD docker" # DPKG_ADD="$DPKG_ADD docker-ce" DPKG_DIS="docker" # `curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb arch=amd64 https://download.docker.com/linux/ubuntu bionic stable"`
BREW_ADD="$BREW_ADD docker-compose" # <https://github.com/docker/compose>
BREW_ADD="$BREW_ADD docker-machine" # provides docker daemon <https://docs.docker.com/desktop>

# DevOps monitoring.
# RUST_ADD="$RUST_ADD bandwhich" # bandwidth utilization tool https://github.com/imsnif/bandwhich
# RUST_ADD="$RUST_ADD diskonaut" # terminal disk space navigator https://github.com/imsnif/diskonaut
# RUST_ADD="$RUST_ADD du-dust" # show disk space usage, is an du replacement https://github.com/bootandy/dust
# RUST_ADD="$RUST_ADD procs" # list processes, is an ps replacement https://github.com/dalance/procs
BREW_ADD="$BREW_ADD btop" # a-la htop
BREW_ADD="$BREW_ADD erdtree" # disk space usage is an ncdu replacement
BREW_ADD="$BREW_ADD htop" # DPKG_ADD="$DPKG_ADD htop" # a-la top <https://github.com/htop-dev/htop>
BREW_ADD="$BREW_ADD ncdu" # DPKG_ADD="$DPKG_ADD ncdu" # disk space usage is an baobab and gt5 replacement

# # DevOps Benchmarks a-la `ab`.
# DPKG_ADD="$DPKG_ADD bonnie++"
# DPKG_ADD="$DPKG_ADD apache2-utils"
# DPKG_ADD="$DPKG_ADD dbench"
# DPKG_ADD="$DPKG_ADD siege"
# DPKG_ADD="$DPKG_ADD sysbench" # cpu and memory benchmarks
# DPKG_ADD="$DPKG_ADD tiobench" # TODO: find this package
# DPKG_ADD="$DPKG_ADD wrk" # c http benchmark tool <https://github.com/wg/wrk>

# DevOps.
BREW_ADD="$BREW_ADD ansible" # <https://github.com/ansible/ansible>
BREW_ADD="$BREW_ADD k9s" # derailed/k9s/k9s:, k8s/kubernetes client <https://github.com/derailed/k9s>
BREW_ADD="$BREW_ADD kubernetes-cli" # DPKG_ADD="$DPKG_ADD kubectl" # provides k8s/kubernetes kubectl util `deb https://apt.kubernetes.io kubernetes-xenial main` <https://kubernetes.io/docs/tasks/tools/install-kubectl> # DPKG_ADD="$DPKG_ADD gnupg2" # required by kubectl
BREW_ADD="$BREW_ADD netdata" # monitoring <https://github.com/netdata/netdata>
BREW_ADD="$BREW_ADD vault" # DPKG_ADD="$DPKG_ADD vault" # vault util (hashicorp) # curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - && sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main", <https://vaultproject.io/downloads>

# # X11 Suckless dwm.
# # DPKG_ADD="$DPKG_ADD gxkb" # a-la xxkb (destroy xchainkeys)
# # DPKG_ADD="$DPKG_ADD rofi" # a-la dmenu for open windows
# # DPKG_ADD="$DPKG_ADD xfdashboard" # a-la compiz expose/gnome overview (works only with running xfce session)
# # DPKG_ADD="$DPKG_ADD stterm" # instead compiled from source into ~/.local/usr/local/bin # succless st terminal
# # DPKG_ADD="$DPKG_ADD volumeicon-alsa" # instead using i3 (i3status) # sound/volume icon indicator <https://github.com/Maato/volumeicon>
# DPKG_ADD="$DPKG_ADD build-essential" # suckless dependency
# DPKG_ADD="$DPKG_ADD i3lock" # xscreensaver replacement
# DPKG_ADD="$DPKG_ADD libx11-dev" # suckless dependency
# DPKG_ADD="$DPKG_ADD libxinerama-dev" # suckless dependency
# DPKG_ADD="$DPKG_ADD sharutils" # suckless dependency
# DPKG_ADD="$DPKG_ADD suckless-tools" # provides dmenu, slock and more
# DPKG_ADD="$DPKG_ADD xautolock" # used by i3lock
# DPKG_ADD="$DPKG_ADD xxkb" # keyboard/language layout indicator (flag) for tray

# X11 i3.
# DPKG_ADD="$DPKG_ADD i3status" # instead using i3blocks
# DPKG_ADD="$DPKG_ADD libwnck-3-dev libxklavier-dev libgtk-3-dev dh-autoreconf dh-make devscripts fakeroot" # gxkb compiltime dependency, is a keyboard/language layout indicator (flag) for tray <https://github.com/zen-tools/gxkb#building-from-source>, a-la xxkb
DPKG_ADD="$DPKG_ADD build-essential" # dmenu (suckless) dependency
DPKG_ADD="$DPKG_ADD i3-wm"
DPKG_ADD="$DPKG_ADD i3lock" # xscreensaver replacement
DPKG_ADD="$DPKG_ADD libxcb-ewmh-dev libxcb-icccm4-dev libxcb-util0-dev" # xtitle (used by i3blocks/i3) compiltime dependency <https://github.com/baskerville/xtitle>
DPKG_ADD="$DPKG_ADD xautolock" # used by i3lock
DPKG_ADD="$DPKG_ADD libxpm-dev libxt-dev xutils-dev" # xxkb compiltime dependency, is a keyboard/language layout indicator (flag) for tray <https://github.com/scientistnik/xxkb>, a-la gxkb which destroys xchainkeys

# # X11 bspwm.
# DPKG_ADD="$DPKG_ADD bspwm" # a-la i3

# X11 invert colors on x11/xorg/xrandr
# <https://superuser.com/questions/208746/invert-colors-on-x-or-xfce4#1494872#209083>.
DPKG_ADD="$DPKG_ADD libxcb-randr0-dev"
DPKG_ADD="$DPKG_ADD xcalib" # `xcalib -i -a` invert colors on xorg/xrandr <https://superuser.com/questions/208746/invert-colors-on-x-or-xfce4#1494872#209083>

# X11 dunst/dunstify (respects org.freedesktop.Notifications)
# <https://github.com/dunst-project/dunst>
# DPKG_ADD="$DPKG_ADD libc6 libcairo2 libgdk-pixbuf2.0-0 libglib2.0-0 libpango-1.0-0 libpangocairo-1.0-0 libx11-6 libxdg-basedir1 libxinerama1 libxrandr2 libxss1" # runtime dependencies
# DPKG_ADD="$DPKG_ADD dunst" # instead compiled from source into ~/.local/usr/local/bin # a-la notify-osd
DPKG_ADD="$DPKG_ADD libdbus-1-dev libnotify-dev libxrandr-dev libpango1.0-dev libx11-dev libxinerama-dev libxss-dev libglib2.0-dev libgtk-3-dev libxdg-basedir-dev" # compiltime dependency <https://github.com/dunst-project/dunst/wiki/Dependencies>

# X11 xchainkeys <https://github.com/hbekel/xchainkeys>.
DPKG_ADD="$DPKG_ADD light" # xchainkeys runtime dependency
DPKG_ADD="$DPKG_ADD automake" # xchainkeys compiltime dependency

# # X11 sxhkd.
# # DPKG_ADD="$DPKG_ADD sxhkd" # a-la xchainkeys
# DPKG_ADD="$DPKG_ADD libxcb1 libxcb-keysyms1" # sxhkd runtime dependencies
# DPKG_ADD="$DPKG_ADD libxcb1 libxcb-keysyms1-dev" # sxhkd compiltime dependency

# X11 volumeicon.
# DPKG_ADD="$DPKG_ADD intltool autogen" # volumeicon-alsa compiltime dependency
# DPKG_ADD="$DPKG_ADD libasound2-dev libglib2.0-dev libgtk-3-dev" # volumeicon-alsa compiltime dependency
DPKG_ADD="$DPKG_ADD volumeicon-alsa"

# X11 Xfce4 DE Desktop Environment.
# DPKG_ADD="$DPKG_ADD libxfce4panel-2.0-dev libxfce4ui-2-dev" # compiltime dependency of text plugin <https://github.com/daveriesz/xfce-text-plugin>
# DPKG_ADD="$DPKG_ADD orage" # xfce date time plugin with calendar
# DPKG_ADD="$DPKG_ADD thunar-megasync" # not using
# DPKG_ADD="$DPKG_ADD xfce4-notifyd" # notifications daemon (used by dwm)
# DPKG_ADD="$DPKG_ADD xfdashboard" # instead installing skippy-xd
DPKG_ADD="$DPKG_ADD elementary-icon-theme"
DPKG_ADD="$DPKG_ADD elementary-xfce-icon-theme"
DPKG_ADD="$DPKG_ADD mousepad" # simple text editor for xfce <https://github.com/codebrainz/mousepad>
DPKG_ADD="$DPKG_ADD thunar" # file manager
DPKG_ADD="$DPKG_ADD thunar-archive-plugin"
DPKG_ADD="$DPKG_ADD thunar-dropbox-plugin"
DPKG_ADD="$DPKG_ADD thunar-volman"
DPKG_ADD="$DPKG_ADD xfce4"
DPKG_ADD="$DPKG_ADD xfce4-diskperf-plugin" # disk io performance
DPKG_ADD="$DPKG_ADD xfce4-power-manager"
DPKG_ADD="$DPKG_ADD xfce4-systemload-plugin" # system cpu/mem/net/swap load monitor
DPKG_ADD="$DPKG_ADD xfce4-windowck-plugin" # put maximized window title on the panel <https://github.com/takinoy/xfce4-windowck-plugin>
DPKG_ADD="$DPKG_ADD xfce4-xkb-plugin" # keyboard language switcher

# X11 MATE DE Desktop Environment.
# DPKG_ADD="$DPKG_ADD atril" # instead installed from snap # pdf viewer (remembers last page) for mate de (desktop environment) https://github.com/mate-desktop/atril
DPKG_ADD="$DPKG_ADD caja" # file manager
DPKG_ADD="$DPKG_ADD engrampa" # archiver
DPKG_ADD="$DPKG_ADD evince-" # remove: pdf viewer remembers last page https://github.com/mate-desktop/atril
DPKG_ADD="$DPKG_ADD ristretto" # command line image viewer

# # X11 dropbox.
# DPKG_ADD="$DPKG_ADD dropbox"
# DPKG_REM="$DPKG_REM nautilus-dropbox" # conflicts with dropbox deb file

# X11 Gnome Desktop Environment.
# DPKG_ADD="$DPKG_ADD chrome-gnome-shell" # chrome/gnome extension integration
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-appindicator-" remove
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-impatience" # speed up the gnome-shell animation speed
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-move-clock" # move clock extension for GNOME shell
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-ubuntu-dock-" # remove
# DPKG_ADD="$DPKG_ADD ubuntu-desktop-" # remove
DPKG_ADD="$DPKG_ADD gnome-tweaks" # former gnome-tweak-tool (in addition to gnome-control-center)

# X11 Zoom instead installed by the appimage. # Zoom dependencies.
# DPKG_ADD="$DPKG_ADD libegl1-mesa"
# DPKG_ADD="$DPKG_ADD libglib2.0-0"
# DPKG_ADD="$DPKG_ADD libgstreamer-plugins-base1.0-0"
# DPKG_ADD="$DPKG_ADD libxcb-shape0"
# DPKG_ADD="$DPKG_ADD libxcb-shm0"
# DPKG_ADD="$DPKG_ADD libxcb-xfixes0"
# DPKG_ADD="$DPKG_ADD libxcb-randr0"
# DPKG_ADD="$DPKG_ADD libxcb-image0"
# DPKG_ADD="$DPKG_ADD libfontconfig1"
# DPKG_ADD="$DPKG_ADD libgl1-mesa-glx"
# DPKG_ADD="$DPKG_ADD libxi6"
# DPKG_ADD="$DPKG_ADD libsm6"
# DPKG_ADD="$DPKG_ADD libxrender1"
# DPKG_ADD="$DPKG_ADD libpulse0"
# DPKG_ADD="$DPKG_ADD libxcomposite1"
# DPKG_ADD="$DPKG_ADD libxslt1.1"
# DPKG_ADD="$DPKG_ADD libsqlite3-0"
# DPKG_ADD="$DPKG_ADD libxcb-keysyms1"
# DPKG_ADD="$DPKG_ADD libxcb-xtest0"

# # X11 Google chrome <https://www.google.com/chrome>.
# DPKG_ADD="$DPKG_ADD apt-transport-https"
# DPKG_ADD="$DPKG_ADD google-chrome-stable" # instead installed by the appimage

# # X11 never used Brave browser a-la google chrome <https://github.com/brave>.
# DPKG_ADD="$DPKG_ADD apt-transport-https"
# DPKG_ADD="$DPKG_ADD brave-browser" # a-la google chrome
# DPKG_ADD="$DPKG_ADD curl"
# DPKG_ADD="$DPKG_ADD gnupg"

# X11/xorg/desktop.
# BREW_ADD="$BREW_ADD duplicity" # DPKG_ADD="$DPKG_ADD duplicity" # backuping
# DPKG_ADD="$DPKG_ADD firefox" # instead installed from snap # works normal with graylog's text box (input box), text field (input field)
# DPKG_ADD="$DPKG_ADD font-manager" # list bitmap ??? fonts
# DPKG_ADD="$DPKG_ADD fonts-fantasque-sans" # instead installed manually into /usr/local/share/fonts # terminal/code/mono/programming font (gnome-terminal issue https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=960629)
# DPKG_ADD="$DPKG_ADD fonts-hack-ttf" # instead installed manually into /usr/local/share/fonts # terminal/code/mono/programming font
# DPKG_ADD="$DPKG_ADD fonts-noto" # awesome serif font ???
# DPKG_ADD="$DPKG_ADD gimp" # instead installed from flatpak # a-la photoshop
# DPKG_ADD="$DPKG_ADD libappindicator3-1" # slack dependency # libayatana-appindicator3-1 : Conflicts: libappindicator3-1 but 12.10.1+20.10.20200706.1-0ubuntu1 is to be installed
# DPKG_ADD="$DPKG_ADD libgdk-pixbuf2.0-dev libglib2.0-dev libxml2-utils" # compiltime dependency of numix theme
# DPKG_ADD="$DPKG_ADD pk-update-icon" # FIXME: missing? # display notifications about software updates
# DPKG_ADD="$DPKG_ADD uswsusp" # FIXME: missing? # systemctl hibernate
# DPKG_ADD="$DPKG_ADD xcalib" # returns: "Error - unsupported ramp size 0" (load icc/icm display color profiles (only calibration curves) <https://wiki.archlinux.org/index.php/ICC_Profiles#xcalib>)
# DPKG_ADD="$DPKG_ADD xclip" # tmux and xorg clipboard integration <https://github.com/tmux-plugins/tmux-yank#linux-requirements>
# DPKG_REM="$DPKG_REM xserver-xorg-video-intel" # instead of intel using modesetting <https://bugs.launchpad.net/ubuntu/+source/xserver-xorg-video-intel/+bug/1867668>
BREW_ADD="$BREW_ADD feh" # DPKG_ADD="$DPKG_ADD feh" # command line image viewer
BREW_ADD="$BREW_ADD ffmpeg" # watch webcam `ffplay -fs /dev/video0` https://github.com/ffmpeg/ffmpeg
BREW_ADD="$BREW_ADD marp-cli" # markdown to presentation (pdf) from command line https://github.com/marp-team/marp
BREW_ADD="$BREW_ADD mpv" # DPKG_ADD="$DPKG_ADD mpv" # a-la mplayer replacement
BREW_ADD="$BREW_ADD xdotool" # ???
DPKG_ADD="$DPKG_ADD argyll" # load icc/icm display color profiles <https://wiki.archlinux.org/index.php/ICC_Profiles#Argyll_CMS>
DPKG_ADD="$DPKG_ADD blueman" # full featured bluetooth manager gui <https://wiki.archlinux.org/title/Blueman>, <https://wiki.archlinux.org/title/Bluetooth>
DPKG_ADD="$DPKG_ADD gparted" # format/create partition/disk/usb
DPKG_ADD="$DPKG_ADD libfuse2" # pcloud dependency
DPKG_ADD="$DPKG_ADD libimlib2-dev libfontconfig1-dev libfreetype6-dev libx11-dev libxext-dev libxft-dev libxrender-dev zlib1g-dev libxinerama-dev libxcomposite-dev libxdamage-dev libxfixes-dev libxmu-dev" # skippy-xd is an full-screen task-switcher for X11 <https://github.com/richardgv/skippy-xd>
DPKG_ADD="$DPKG_ADD libnotify-bin" # a-la notify-osd
DPKG_ADD="$DPKG_ADD libx11-dev" # c/c++ compile/make x11 dependencies
DPKG_ADD="$DPKG_ADD light" # used by xchainkeys or ~/.xprofile or ~/.xstart
DPKG_ADD="$DPKG_ADD lxappearance" # change/switch gtk2/gtk3 themes
DPKG_ADD="$DPKG_ADD maim" # takes screenshots of desktop
DPKG_ADD="$DPKG_ADD meld" # gnome diff (gtk)
DPKG_ADD="$DPKG_ADD mesa-utils" # provides glxgears util for the 3d compositor testing
DPKG_ADD="$DPKG_ADD mkusb usb-pack-efi" # mkusb <https://help.ubuntu.com/community/mkusb#Installation> create bootable/live usb/iso <https://help.ubuntu.com/community/mkusb#Quick_start_manual_and_mkusb_PPA>
DPKG_ADD="$DPKG_ADD sassc libglib2.0-dev-bin" # dependencies of whitesur gtk theme <https://github.com/vinceliuice/whitesur-gtk-theme>, <https://github.com/vinceliuice/whitesur-icon-theme>.
DPKG_ADD="$DPKG_ADD transmission" # torrent client # DPKG_REM="$DPKG_REM transmission-gtk"
DPKG_ADD="$DPKG_ADD ubuntu-restricted-extras" # playing video in browser instead of download <https://askubuntu.com/questions/1122579/firefox-downloads-the-video-instead-of-playing-it#1122668>, <https://askubuntu.com/questions/56446/how-do-i-install-the-ubuntu-restricted-extras-package#56448>
DPKG_ADD="$DPKG_ADD xscreensaver-data-extra"
DPKG_ADD="$DPKG_ADD xscreensaver-gl-extra"
DPKG_ADD="$DPKG_ADD xserver-xorg-video-intel" # instead of modesetting using intel <https://bugs.launchpad.net/ubuntu/+source/xserver-xorg-video-intel/+bug/1867668>
DPKG_REM="$DPKG_REM gnome-mahjongg" # classic eastern tile game for gnome
DPKG_REM="$DPKG_REM remmina" # gtk+ remote desktop client
DPKG_REM="$DPKG_REM thunderbird thunderbird-gnome-support thunderbird-locale-en thunderbird-locale-en-gb thunderbird-locale-en-us thunderbird-locale-ru" # instead installed mailspring from snap # GUI mail client written in C/C++

# Er ozn.
# BREW_ADD="$BREW_ADD openvpn" # DPKG_ADD="$DPKG_ADD openvpn" DPKG_DIS="$DPKG_DIS openvpn openvpn@client" # openvpn client <https://confluence.ozon.ru/pages/viewpage.action?spaceKey=CORPIT&title=OpenVPN+for+Linux>
BREW_ADD="$BREW_ADD go@1.19"
BREW_ADD="$BREW_ADD libxml2" # provides xmllint
BREW_ADD="$BREW_ADD postgresql"
BREW_ADD="$BREW_ADD redis"
BREW_ADD="$BREW_ADD vault"
DPKG_ADD="$DPKG_ADD libpcap-dev" # required by github.com/google/gopacket/pcap (go/src/github.com/google/gopacket/pcap/pcap_unix.go:34:10: fatal error: pcap.h: No such file or directory)
DPKG_ADD="$DPKG_ADD libqt5webkit5" # GlobalProtect_UI_deb-5.2.6.0-18.deb VPN dependency
DPKG_ADD="$DPKG_ADD libxml2-dev"

# # Er rkt.
# # DPKG_ADD="$DPKG_ADD glide" # german does not use glide # go/german `add-apt-repository ppa:masterminds/glide` golang glide vendor package management <https://github.com/Masterminds/glide>
# # DPKG_ADD="$DPKG_ADD postgresql-11" DPKG_DIS="$DPKG_DIS postgresql-11" # `deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main` <https://www.postgresql.org/download/linux/ubuntu>
# # DPKG_ADD="$DPKG_ADD postgresql-9.6" DPKG_DIS="$DPKG_DIS postgresql-9.6"  # felix `deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main` <https://www.postgresql.org/download/linux/ubuntu>
# # DPKG_ADD="$DPKG_ADD yarn" # (NOTE: before add ppa!) js package manager required by rails asset pipeline precompilation (before install add ppa <https://yarnpkg.com/lang/en/docs/install/#debian-stable>)
# BREW_ADD="$BREW_ADD docker docker-machine docker-compose" # DPKG_ADD="$DPKG_ADD docker-ce" DPKG_DIS="$DPKG_DIS docker" # `curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb arch=amd64 https://download.docker.com/linux/ubuntu bionic stable"`
# DPKG_ADD="$DPKG_ADD elasticsearch apt-transport-https" # felix `deb https://artifacts.elastic.co/packages/5.x/apt stable main` elasticsearch 5 <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html>, # apt-transport-https required by elasticsearch ppa <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html#deb-repo>
# DPKG_ADD="$DPKG_ADD golang"
# DPKG_ADD="$DPKG_ADD libmagickwand-dev" # required by rmagick by felix
# DPKG_ADD="$DPKG_ADD libpcap-dev" # required by github.com/google/gopacket/pcap (go/src/github.com/google/gopacket/pcap/pcap_unix.go:34:10: fatal error: pcap.h: No such file or directory)
# DPKG_ADD="$DPKG_ADD libxml2-utils" # provides xmllint
# DPKG_ADD="$DPKG_ADD network-manager-vpnc-gnome" # cisco vpn client plugin for the gnome
# DPKG_ADD="$DPKG_ADD openconnect" # vpnc/globalprotect compatible, ppa: <https://launchpad.net/~phusen/+archive/ubuntu/openconnect>
# DPKG_ADD="$DPKG_ADD redis" DPKG_DIS="$DPKG_DIS redis-server"
# DPKG_ADD="$DPKG_ADD redis" DPKG_DIS="$DPKG_DIS redis-server" # felix
# DPKG_ADD="$DPKG_ADD vpnc" # cisco vpn client

if [ "$OPT_VERBOSE" = 0 ] ; then
    RUST_UPD_CLI="$RUST_UPD_CLI --verbose"
    RUST_ADD_CLI="$RUST_ADD_CLI --verbose"
fi

# APT/deb/dpkg/apt-get/aptitude <https://en.wikipedia.org/wiki/APT_(software)>.
if [ "$OPT_DPKG" = 0 ] || [ "$OPT_ALL" = 0 ]; then
    sudo cat /dev/null || exit 1
    printf "Installing dpkg...\n\n"
    sh -c "sudo $DPKG_REM_CLI $DPKG_REM" || exit 1
    sh -c "sudo $DPKG_ADD_CLI $DPKG_ADD" || exit 1
    # sh -c "sudo $DPKG_DIS_CLI $DPKG_DIS" || exit 1
fi

# Homebrew <https://brew.sh>.
if [ "$OPT_BREW" = 0 ] || [ "$OPT_ALL" = 0 ]; then
    printf "Installing homebrew...\n\n"
    # for src in ${BREW_REM_SRC}; do sh -c "$BREW_REM_SRC_CLI $src" || exit 1; done
    for src in ${BREW_ADD_SRC}; do sh -c "$BREW_ADD_SRC_CLI $src" || exit 1; done
    [ -n "$BREW_ADD" ] && [ "$BREW_ADD" != " " ] && sh -c "$BREW_ADD_CLI $BREW_ADD" || exit 1
    printf "\n"
fi

# Rust Cargo
# <https://github.com/rust-lang/cargo>,
# <https://doc.rust-lang.org/cargo>.
if [ "$OPT_RUST" = 0 ] || [ "$OPT_ALL" = 0 ]; then
    if [ "$OPT_UPDATE" = 0 ]; then
        printf "Updating Rust Cargo...\n\n"
        for pkg in ${RUST_ADD}; do sh -c "$RUST_UPD_CLI $pkg" || exit 1; done
    else
        printf "Installing Rust Cargo...\n\n"
        for pkg in ${RUST_ADD}; do sh -c "$RUST_ADD_CLI $pkg" || exit 1; done
    fi
    printf "\n"
fi
