#!/bin/sh

# This file is part of Danil Kutkevich <danil@kutkevich.org> home.

# APT (apt-get/aptitude).
DPKG_ADD_CLI="sudo aptitude install --without-recommends"
DPKG_REM_CLI="sudo aptitude remove"
# DPKG_DIS_CLI="sudo systemctl disable"

# TODO: install ntp

# Common packages.
# DPKG_ADD="$DPKG_ADD apache2-utils" # instead installed from the homebrew # provides htpasswd utility is an nginx/apach basic authentication password generator
# DPKG_ADD="$DPKG_ADD convmv" # instead installed util-linux from the homebrew # a-la iconv character encoding conversion util
# DPKG_ADD="$DPKG_ADD curl" # instead installed from the homebrew
# DPKG_ADD="$DPKG_ADD dos2unix" # instead installed from the homebrew # convert text file line endings between CRLF and LF
# DPKG_ADD="$DPKG_ADD git" # instead installed from the homebrew instead
# DPKG_ADD="$DPKG_ADD goaccess" # instead installed from the homebrew # analyze nginx/apache log in real-time
# DPKG_ADD="$DPKG_ADD hping3" # instead installed hping from the homebrew # a-la interactive ping https://github.com/antirez/hping
# DPKG_ADD="$DPKG_ADD htop" # instead installed from the homebrew # a-la top
# DPKG_ADD="$DPKG_ADD inxi" # inxi --graphics <https://github.com/smxi/inxi>
# DPKG_ADD="$DPKG_ADD jp2a" # converts jpg to ascii
# DPKG_ADD="$DPKG_ADD jq" # instead installed from the homebrew # json console formater (used by emacs counsel-jq) <http://stedolan.github.io/jq/tutorial>, <http://stackoverflow.com/questions/352098/how-can-i-pretty-print-json#15231463>
# DPKG_ADD="$DPKG_ADD lftp" # instead installed from the homebrew # ftp client
# DPKG_ADD="$DPKG_ADD linux-generic-hwe-20.04-edge" # linxu/kernel 5.11 for ubuntu 20.04
# DPKG_ADD="$DPKG_ADD mailutils" # instead installed from the homebrew # is an gnu mailutils, reads local mail, provides /usr/bin/mail
# DPKG_ADD="$DPKG_ADD makepasswd" # password generator
# DPKG_ADD="$DPKG_ADD mosh" # instead installed from the homebrew # ssh replacement
# DPKG_ADD="$DPKG_ADD ncdu" # instead installed from the homebrew # disk space usage is an baobab and gt5 replacement
# DPKG_ADD="$DPKG_ADD nginx" DPKG_DIS="$DPKG_DIS nginx" # instead installed from the homebrew
# DPKG_ADD="$DPKG_ADD pigz" # instead installed from the homebrew # parallel gzip for multi-processor, multi-core
# DPKG_ADD="$DPKG_ADD protobuf-compiler" # version to old/outdated(
# DPKG_ADD="$DPKG_ADD pwgen" # instead installed from the homebrew # password generator
# DPKG_ADD="$DPKG_ADD syncthing" # instead installed from the homebrew # dropbox replacement: deb https://apt.syncthing.net/ syncthing release
# DPKG_ADD="$DPKG_ADD tig" # instead installed from the homebrew # git interactive cli
# DPKG_ADD="$DPKG_ADD tree" # instead installed from the homebrew # displays an indented directory tree
# DPKG_ADD="$DPKG_ADD uni2ascii" # instead installed from the homebrew # to/from unicode and to/from percent-encoding converter `echo -ne '%D0%BF%D1%80%D0%B8%D0%B2%D0%B5%D1%82' | ascii2uni -q -aJ | uni2ascii -q -aJ`
# DPKG_ADD="$DPKG_ADD uuid-runtime" # instead util-linux install from the homebrew # generating uuid <https://github.com/util-linux/util-linux>, <https://serverfault.com/questions/103359/how-to-create-a-uuid-in-bash#103366>
# DPKG_ADD="$DPKG_ADD vim" # instead util-linux install from the homebrew # vim is awesome, neovim is sucks
# DPKG_ADD="$DPKG_ADD whois" # instead util-linux install from the homebrew
DPKG_ADD="$DPKG_ADD apt-transport-https" # required by custom ppa
DPKG_ADD="$DPKG_ADD bc" # used by bash prompt, console-based calculator utility
DPKG_ADD="$DPKG_ADD bind9-host" # automatic/dependency: dns/host lookup utility
DPKG_ADD="$DPKG_ADD genius" # calculator
DPKG_ADD="$DPKG_ADD libpci-dev libnl-3-dev libnl-genl-3-dev gettext libgettextpo-dev autopoint gettext libncurses5-dev libncursesw5-dev libtool-bin dh-autoreconf autoconf-archive pkg-config" # powertop diagnose power consumption https://github.com/fenrus75/powertop#build-dependencies
DPKG_ADD="$DPKG_ADD lm-sensors" # FIXME: is the cpu temperate by ls sensors used by plain status or by slstatus?
DPKG_ADD="$DPKG_ADD logrotate"
DPKG_ADD="$DPKG_ADD lynx" # html to plain text `curl https://your.tld/ | lynx --stdin --dump`
DPKG_ADD="$DPKG_ADD mlocate" # locate/updatedb
DPKG_ADD="$DPKG_ADD net-tools" # ifconfig cli
DPKG_ADD="$DPKG_ADD opensmtpd" # send mail via /usr/bin/sendmail and deliver local mail to /var/mail a-la exim replacement
DPKG_ADD="$DPKG_ADD openssh-server"
DPKG_ADD="$DPKG_ADD zstd" # a-la gz/xz compression

# Homebrew <https://docs.brew.sh/Homebrew-on-Linux#requirements>.
# DPKG_ADD="$DPKG_ADD git" # instead installed from the homebrew
DPKG_ADD="$DPKG_ADD build-essential"
DPKG_ADD="$DPKG_ADD curl"
DPKG_ADD="$DPKG_ADD file"
DPKG_ADD="$DPKG_ADD procps" # /proc file system utilities

# Flatpak.
DPKG_ADD="$DPKG_ADD flatpak" # PMS
DPKG_ADD="$DPKG_ADD gnome-software-plugin-flatpak" # Flatpak support for GNOME software

# instead installed tmux from the homebrew.
# # Tmux (os wide/from source).
# # DPKG_ADD="$DPKG_ADD tmux" # os wide
# DPKG_ADD="$DPKG_ADD byacc" # preventing compiltime dependency error: ./etc/ylwrap: line 175: yacc: command not found
# DPKG_ADD="$DPKG_ADD pkg-config libevent-dev libncurses-dev" # compiltime dependencies

# Emacs.
# DPKG_ADD="$DPKG_ADD clang" # instead installed from the homebrew # used by company-clang backend # c, c++ and objective-c compiler based on llvm
# DPKG_ADD="$DPKG_ADD emacs-nox" # instead compiled from source into ~/.local/usr/local/bin # TODO: maybe instead installed emacs from the homebrew?
# DPKG_ADD="$DPKG_ADD libgif-dev" # compiltime dependency X11 <https://www.emacswiki.org/emacs/BuildingEmacs#h5o-4>
# DPKG_ADD="$DPKG_ADD shellcheck" # instead installed from the homebrew # used by emacs flycheck
DPKG_ADD="$DPKG_ADD aspell-en" # used by emacs auto complete
DPKG_ADD="$DPKG_ADD aspell-ru" # used by emacs auto complete
DPKG_ADD="$DPKG_ADD emacs-el" # find/navigate elisp function source code <https://unix.stackexchange.com/questions/73100/how-to-attach-elisp-function-source-code-in-emacs>
DPKG_ADD="$DPKG_ADD libgnutls28-dev" # compiltime dependency <https://stackoverflow.com/questions/52722096/build-emacs-and-gnutls-not-found#60430406>

# # Basher is a bash/shell/functions package manager
# # <https://github.com/basherpm/basher>.
# DPKG_ADD="$DPKG_ADD bash"
# DPKG_ADD="$DPKG_ADD coreutils"

# instead installed kubernetes-cli from the homebrew.
# # K8s kubernetes.
# DPKG_ADD="$DPKG_ADD kubectl" # `deb https://apt.kubernetes.io/ kubernetes-xenial main` <https://kubernetes.io/docs/tasks/tools/install-kubectl>
# DPKG_ADD="$DPKG_ADD gnupg2" # required by kubectl
# DPKG_ADD="$DPKG_ADD apt-transport-https ca-certificates curl"

# # Docker
# # <https://docs.docker.com/install/linux/docker-ce/ubuntu>.
# DPKG_ADD="$DPKG_ADD docker-ce docker-ce-cli containerd.io" DPKG_DIS="$DPKG_DIS docker" # `curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb arch=amd64 https://download.docker.com/linux/ubuntu bionic stable"`
# DPKG_ADD="$DPKG_ADD golang-docker-credential-helpers" # credential helper stores encrypted passwords in d-bus secret service instead of unencrypted password in plain file <https://docs.docker.com/engine/reference/commandline/login/#credentials-store>
# DPKG_ADD="$DPKG_ADD apt-transport-https ca-certificates curl gnupg gnupg-agent lsb-release software-properties-common" # required by docker ppa <https://docs.docker.com/install/linux/docker-ce/ubuntu>

# instead installed from the homebrew.
# The silver searcher (ag) <https://github.com/ggreer/the_silver_searcher>.
# DPKG_ADD="$DPKG_ADD silversearcher-ag" # instead installed from the homebrew
# DPKG_ADD="$DPKG_ADD automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev" # compiltime dependencies <https://github.com/ggreer/the_silver_searcher#building-from-source>

# C/C++ compile/make common dependencies.
DPKG_ADD="$DPKG_ADD automake" # required by tmux/xchainkeys
DPKG_ADD="$DPKG_ADD build-essential" # compiler?
DPKG_ADD="$DPKG_ADD devscripts" # ???
DPKG_ADD="$DPKG_ADD make" # required by all)
DPKG_ADD="$DPKG_ADD valgrind" # find memory leaks https://www.valgrind.org/docs/manual/quick-start.html

# instead installed PostgreSQL from the homebrew.
# PostgreSQL.
# DPKG_ADD="$DPKG_ADD pgcenter" # postgresql command-line tool https://github.com/lesovsky/pgcenter/releases install: dpkg --install path/to/pgcenter.deb
# DPKG_ADD="$DPKG_ADD postgresql-14" DPKG_DIS="$DPKG_DIS postgresql" # `deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main` <https://www.postgresql.org/download/linux/ubuntu>
# DPKG_ADD="$DPKG_ADD postgresql-server-dev-14" # required by pg_activity is an postgresql activity monitoring <https://github.com/dalibo/pg_activity>

# # Mongodb.
# install="$DPKG_ADD mongodb-org" DPKG_DIS="$DPKG_DIS mongod" # latest stable version of the mongodb server
# DPKG_ADD="$DPKG_ADD gnupg" # required by mongodb <https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu>

# Golang programming language.
# DPKG_ADD="$DPKG_ADD golang-race-detector-runtime" # FIXME: where is race detector for the go 1.15?
# Installing instead go from the homebrew `brew install go && brew upgrade go`
# DPKG_ADD="$DPKG_ADD golang"
# DPKG_ADD="$DPKG_ADD golang-1.17-doc golang-1.17-go golang-1.17-src"

# instead installed rust from the homebrew.
# # Rust programming language.
# # DPKG_ADD="$DPKG_ADD libgtk-3-dev" # required by fontfinder https://github.com/mmstick/fontfinder
# # DPKG_ADD="$DPKG_ADD libwebkit2gtk-4.0-dev" # required by fontfinder https://github.com/mmstick/fontfinder
# DPKG_ADD="$DPKG_ADD libudev-dev" # required by fclones, is an duplicate file finder https://github.com/pkolaczk/fclones
# DPKG_ADD="$DPKG_ADD libxcb-composite0-dev" # required by gitui a-la tig https://github.com/extrawurst/gitui

# instead installed dart from the homebrew.
# # Dart <https://dart.dev/get-dart#install-using-apt-get>.
# DPKG_ADD="$DPKG_ADD apt-transport-https"
# DPKG_ADD="$DPKG_ADD dart"

# instead installed ruby from the homebrew.
# # Ruby programming language.
# # DPKG_ADD="$DPKG_ADD libssl1.0-dev" # required by ruby 2.3.7 (libssl1.0-dev conflicts with libssl-dev)
# DPKG_ADD="$DPKG_ADD libreadline-dev" # required by ruby 2.6.3
# DPKG_ADD="$DPKG_ADD libsqlite3-dev" # required by sqlite3 which required by mailcatcher
# DPKG_ADD="$DPKG_ADD libssl-dev" # required by ruby 2.6.3 (libssl-dev conflicts with libssl1.0-dev)

# instead installed python from the homebrew.
# Python programming language.
# DPKG_ADD="$DPKG_ADD python-pip" # python 2 pip no longer supported by ubuntu
# DPKG_ADD="$DPKG_ADD python3" # instead installed from the homebrew
# DPKG_ADD="$DPKG_ADD python3-pip" # instead installed from the homebrew

# instead installed node from the homebrew.
# # Nodejs/Javascript by nodesource.com's ppa
# # https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions>
# DPKG_ADD="$DPKG_ADD nodejs"
# DPKG_ADD="$DPKG_ADD curl dirmngr apt-transport-https lsb-release ca-certificates" # required by nodesource.com's ppa

# # Benchmarks a-la `ab`.
# DPKG_ADD="$DPKG_ADD bonnie++"
# DPKG_ADD="$DPKG_ADD apache2-utils"
# DPKG_ADD="$DPKG_ADD dbench"
# DPKG_ADD="$DPKG_ADD siege"
# DPKG_ADD="$DPKG_ADD sysbench" # cpu and memory benchmarks
# DPKG_ADD="$DPKG_ADD tiobench" # TODO: find this package
# DPKG_ADD="$DPKG_ADD wrk" # c http benchmark tool <https://github.com/wg/wrk>

# X11/xorg/desktop.
# DPKG_ADD="$DPKG_ADD duplicity" # instead installed from the homebrew # backuping
# DPKG_ADD="$DPKG_ADD feh" # instead installed from the homebrew # command line image viewer
# DPKG_ADD="$DPKG_ADD firefox" # instead installed from snap # works normal with graylog's text box (input box), text field (input field)
# DPKG_ADD="$DPKG_ADD font-manager" # list bitmap ??? fonts
# DPKG_ADD="$DPKG_ADD fonts-fantasque-sans" # instead installed manually into /usr/local/share/fonts # terminal/code/mono/programming font (gnome-terminal issue https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=960629)
# DPKG_ADD="$DPKG_ADD fonts-hack-ttf" # instead installed manually into /usr/local/share/fonts # terminal/code/mono/programming font
# DPKG_ADD="$DPKG_ADD fonts-noto" # awesome serif font ???
# DPKG_ADD="$DPKG_ADD gimp" # instead installed from flatpak # a-la photoshop
# DPKG_ADD="$DPKG_ADD libappindicator3-1" # slack dependency # libayatana-appindicator3-1 : Conflicts: libappindicator3-1 but 12.10.1+20.10.20200706.1-0ubuntu1 is to be installed
# DPKG_ADD="$DPKG_ADD libgdk-pixbuf2.0-dev libglib2.0-dev libxml2-utils" # compiltime dependencies of numix theme
# DPKG_ADD="$DPKG_ADD mpv" # instead installed from the homebrew # a-la mplayer replacement
# DPKG_ADD="$DPKG_ADD pk-update-icon" # FIXME: missing? # display notifications about software updates
# DPKG_ADD="$DPKG_ADD uswsusp" # FIXME: missing? # systemctl hibernate
# DPKG_ADD="$DPKG_ADD xcalib" # returns: "Error - unsupported ramp size 0" (load icc/icm display color profiles (only calibration curves) <https://wiki.archlinux.org/index.php/ICC_Profiles#xcalib>)
# DPKG_ADD="$DPKG_ADD xclip" # tmux and xorg clipboard integration <https://github.com/tmux-plugins/tmux-yank#linux-requirements>
# DPKG_ADD="$DPKG_ADD xsel" # instead installed from the homebrew # copy selection in termina to the xorg clipboard (used by emacs and urxvt) <https://wiki.archlinux.org/index.php/rxvt-unicode#Automatic_Script_Management>
# DPKG_REM="$DPKG_REM xserver-xorg-video-intel" # instead of intel using modesetting <https://bugs.launchpad.net/ubuntu/+source/xserver-xorg-video-intel/+bug/1867668>
DPKG_ADD="$DPKG_ADD argyll" # load icc/icm display color profiles <https://wiki.archlinux.org/index.php/ICC_Profiles#Argyll_CMS>
DPKG_ADD="$DPKG_ADD blueman" # full featured bluetooth manager gui <https://wiki.archlinux.org/title/Blueman>, <https://wiki.archlinux.org/title/Bluetooth>
DPKG_ADD="$DPKG_ADD gparted" # format/create partition/disk/usb
DPKG_ADD="$DPKG_ADD libfuse2" # pcloud dependency
DPKG_ADD="$DPKG_ADD libimlib2-dev libfontconfig1-dev libfreetype6-dev libx11-dev libxext-dev libxft-dev libxrender-dev zlib1g-dev libxinerama-dev libxcomposite-dev libxdamage-dev libxfixes-dev libxmu-dev" # skippy-xd is an full-screen task-switcher for X11 <https://github.com/richardgv/skippy-xd>
DPKG_ADD="$DPKG_ADD libnotify-bin" # a-la notify-osd
DPKG_ADD="$DPKG_ADD light" # used by xchainkeys or ~/.xprofile or ~/.xstart
DPKG_ADD="$DPKG_ADD lxappearance" # change/switch gtk2/gtk3 themes
DPKG_ADD="$DPKG_ADD maim" # takes screenshots of desktop
DPKG_ADD="$DPKG_ADD meld" # gnome diff (gtk)
DPKG_ADD="$DPKG_ADD mesa-utils" # provides glxgears util for the 3d compositor testing
DPKG_ADD="$DPKG_ADD mkusb usb-pack-efi" # mkusb <https://help.ubuntu.com/community/mkusb#Installation> create bootable/live usb/iso <https://help.ubuntu.com/community/mkusb#Quick_start_manual_and_mkusb_PPA>
DPKG_ADD="$DPKG_ADD sassc libglib2.0-dev-bin" # dependencies of whitesur gtk theme <https://github.com/vinceliuice/whitesur-gtk-theme>, <https://github.com/vinceliuice/whitesur-icon-theme>.
DPKG_ADD="$DPKG_ADD transmission" # torrent client # DPKG_REM="$DPKG_REM transmission-gtk"
DPKG_ADD="$DPKG_ADD ubuntu-restricted-extras" # playing video in browser instead of download <https://askubuntu.com/questions/1122579/firefox-downloads-the-video-instead-of-playing-it#1122668>, <https://askubuntu.com/questions/56446/how-do-i-install-the-ubuntu-restricted-extras-package#56448>
DPKG_ADD="$DPKG_ADD xscreensaver-data-extra"
DPKG_ADD="$DPKG_ADD xscreensaver-gl-extra"
DPKG_ADD="$DPKG_ADD xserver-xorg-video-intel" # instead of modesetting using intel <https://bugs.launchpad.net/ubuntu/+source/xserver-xorg-video-intel/+bug/1867668>
DPKG_ADD="$DPKG_ADD xterm" # backup/fallback terminal additional to the st/stterm/alacritty
DPKG_REM="$DPKG_REM gnome-mahjongg"
DPKG_REM="$DPKG_REM remmina"
DPKG_REM="$DPKG_REM thunderbird thunderbird-gnome-support thunderbird-locale-en thunderbird-locale-en-gb thunderbird-locale-en-us thunderbird-locale-ru" # instead installed mailspring from snap # GUI mail client written in C/C++

# C/C++ compile/make X11 dependencies.
DPKG_ADD="$DPKG_ADD libx11-dev" # ???
DPKG_ADD="$DPKG_ADD libxft-dev" # ???

# Invert colors on x11/xorg/xrandr
# <https://superuser.com/questions/208746/invert-colors-on-x-or-xfce4#1494872#209083>.
DPKG_ADD="$DPKG_ADD libxcb-randr0-dev"
DPKG_ADD="$DPKG_ADD xcalib" # `xcalib -i -a` invert colors on xorg/xrandr <https://superuser.com/questions/208746/invert-colors-on-x-or-xfce4#1494872#209083>

# Dunst/dunstify (respects org.freedesktop.Notifications)
# <https://github.com/dunst-project/dunst>
# DPKG_ADD="$DPKG_ADD libc6 libcairo2 libgdk-pixbuf2.0-0 libglib2.0-0 libpango-1.0-0 libpangocairo-1.0-0 libx11-6 libxdg-basedir1 libxinerama1 libxrandr2 libxss1" # runtime dependencies
# DPKG_ADD="$DPKG_ADD dunst" # instead compiled from source into ~/.local/usr/local/bin # a-la notify-osd
DPKG_ADD="$DPKG_ADD libdbus-1-dev libnotify-dev libxrandr-dev libpango1.0-dev libx11-dev libxinerama-dev libxss-dev libglib2.0-dev libgtk-3-dev libxdg-basedir-dev" # compiltime dependencies <https://github.com/dunst-project/dunst/wiki/Dependencies>

# Alacritty terminal emulator a-la st/xterm
# <https://github.com/alacritty/alacritty/blob/master/INSTALL.md#debianubuntu>.
DPKG_ADD="$DPKG_ADD cmake"
DPKG_ADD="$DPKG_ADD libfontconfig1-dev"
DPKG_ADD="$DPKG_ADD libfreetype6-dev"
DPKG_ADD="$DPKG_ADD libxcb-xfixes0-dev"
DPKG_ADD="$DPKG_ADD libxkbcommon-dev"
DPKG_ADD="$DPKG_ADD pkg-config"

# xchainkeys <https://github.com/hbekel/xchainkeys>.
DPKG_ADD="$DPKG_ADD light" # xchainkeys runtime dependency
DPKG_ADD="$DPKG_ADD automake" # xchainkeys compiltime dependency

# # sxhkd.
# # DPKG_ADD="$DPKG_ADD sxhkd" # a-la xchainkeys
# DPKG_ADD="$DPKG_ADD libxcb1 libxcb-keysyms1" # sxhkd runtime dependencies
# DPKG_ADD="$DPKG_ADD libxcb1 libxcb-keysyms1-dev" # sxhkd compiltime dependencies

# i3.
# DPKG_ADD="$DPKG_ADD i3status" # instead using i3blocks
# DPKG_ADD="$DPKG_ADD libwnck-3-dev libxklavier-dev libgtk-3-dev dh-autoreconf dh-make devscripts fakeroot" # gxkb compiltime dependencies, is a keyboard/language layout indicator (flag) for tray <https://github.com/zen-tools/gxkb#building-from-source>, a-la xxkb
DPKG_ADD="$DPKG_ADD build-essential" # dmenu (suckless) dependency
DPKG_ADD="$DPKG_ADD i3-wm"
DPKG_ADD="$DPKG_ADD i3lock" # xscreensaver replacement
DPKG_ADD="$DPKG_ADD libxcb-ewmh-dev libxcb-icccm4-dev libxcb-util0-dev" # xtitle (used by i3blocks/i3) compiltime dependencies <https://github.com/baskerville/xtitle>
DPKG_ADD="$DPKG_ADD xautolock" # used by i3lock
DPKG_ADD="$DPKG_ADD libxpm-dev libxt-dev xutils-dev" # xxkb compiltime dependencies, is a keyboard/language layout indicator (flag) for tray <https://github.com/scientistnik/xxkb>, a-la gxkb which destroys xchainkeys

# # bspwm.
# DPKG_ADD="$DPKG_ADD bspwm" # a-la i3

# volumeicon.
# DPKG_ADD="$DPKG_ADD intltool autogen" # volumeicon-alsa compiltime dependencies
# DPKG_ADD="$DPKG_ADD libasound2-dev libglib2.0-dev libgtk-3-dev" # volumeicon-alsa compiltime dependencies
DPKG_ADD="$DPKG_ADD volumeicon-alsa"

# # Suckless dwm.
# # DPKG_ADD="$DPKG_ADD gxkb" # a-la xxkb (destroy xchainkeys)
# # DPKG_ADD="$DPKG_ADD rofi" # a-la dmenu for open windows
# # DPKG_ADD="$DPKG_ADD xfdashboard" # a-la compiz expose/gnome overview (works only with running xfce session)
# # DPKG_ADD="$DPKG_ADD stterm" # instead compiled from source into ~/.local/usr/local/bin # succless st terminal
# # DPKG_ADD="$DPKG_ADD volumeicon-alsa" # instead using i3 (i3status) # sound/volume icon indicator <https://github.com/Maato/volumeicon>
# DPKG_ADD="$DPKG_ADD build-essential" # suckless dependency
# DPKG_ADD="$DPKG_ADD i3lock" # xscreensaver replacement
# DPKG_ADD="$DPKG_ADD libx11-dev" # suckless dependency
# DPKG_ADD="$DPKG_ADD libxinerama-dev" # suckless dependency
# DPKG_ADD="$DPKG_ADD sharutils" # suckless dependency
# DPKG_ADD="$DPKG_ADD suckless-tools" # provides dmenu, slock and more
# DPKG_ADD="$DPKG_ADD xautolock" # used by i3lock
# DPKG_ADD="$DPKG_ADD xxkb" # keyboard/language layout indicator (flag) for tray

# instead installed vault from the homebrew.
# # Vault (hashicorp) <https://vaultproject.io/downloads>.
# DPKG_ADD="$DPKG_ADD vault" # curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add - && sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"

# Xfce4 DE Desktop Environment.
# DPKG_ADD="$DPKG_ADD libxfce4panel-2.0-dev libxfce4ui-2-dev" # compiltime dependency of text plugin <https://github.com/daveriesz/xfce-text-plugin>
# DPKG_ADD="$DPKG_ADD orage" # xfce date time plugin with calendar
# DPKG_ADD="$DPKG_ADD thunar-megasync" # not using
# DPKG_ADD="$DPKG_ADD xfce4-notifyd" # notifications daemon (used by dwm)
# DPKG_ADD="$DPKG_ADD xfdashboard" # instead installing skippy-xd
DPKG_ADD="$DPKG_ADD elementary-icon-theme"
DPKG_ADD="$DPKG_ADD elementary-xfce-icon-theme"
DPKG_ADD="$DPKG_ADD mousepad" # simple text editor for xfce <https://github.com/codebrainz/mousepad>
DPKG_ADD="$DPKG_ADD thunar" # file manager
DPKG_ADD="$DPKG_ADD thunar-archive-plugin"
DPKG_ADD="$DPKG_ADD thunar-dropbox-plugin"
DPKG_ADD="$DPKG_ADD thunar-volman"
DPKG_ADD="$DPKG_ADD xfce4"
DPKG_ADD="$DPKG_ADD xfce4-diskperf-plugin" # disk io performance
DPKG_ADD="$DPKG_ADD xfce4-power-manager"
DPKG_ADD="$DPKG_ADD xfce4-systemload-plugin" # system cpu/mem/net/swap load monitor
DPKG_ADD="$DPKG_ADD xfce4-windowck-plugin" # put maximized window title on the panel <https://github.com/takinoy/xfce4-windowck-plugin>
DPKG_ADD="$DPKG_ADD xfce4-xkb-plugin" # keyboard language switcher

# MATE DE Desktop Environment.
# DPKG_ADD="$DPKG_ADD atril" # instead installed from snap # pdf viewer (remembers last page) for mate de (desktop environment) https://github.com/mate-desktop/atril
DPKG_ADD="$DPKG_ADD caja" # file manager
DPKG_ADD="$DPKG_ADD engrampa" # archiver
DPKG_ADD="$DPKG_ADD evince-" # remove: pdf viewer remembers last page https://github.com/mate-desktop/atril
DPKG_ADD="$DPKG_ADD ristretto" # command line image viewer

# # Dropbox.
# DPKG_ADD="$DPKG_ADD dropbox"
# DPKG_REM="$DPKG_REM nautilus-dropbox" # conflicts with dropbox deb file

# Gnome Desktop Environment.
# DPKG_ADD="$DPKG_ADD chrome-gnome-shell" # chrome/gnome extension integration
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-appindicator-" remove
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-impatience" # speed up the gnome-shell animation speed
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-move-clock" # move clock extension for GNOME shell
# DPKG_ADD="$DPKG_ADD gnome-shell-extension-ubuntu-dock-" # remove
# DPKG_ADD="$DPKG_ADD ubuntu-desktop-" # remove
DPKG_ADD="$DPKG_ADD gnome-tweaks" # former gnome-tweak-tool (in addition to gnome-control-center)

# Zoom instead installed by the appimage. # Zoom dependencies.
# DPKG_ADD="$DPKG_ADD libegl1-mesa"
# DPKG_ADD="$DPKG_ADD libglib2.0-0"
# DPKG_ADD="$DPKG_ADD libgstreamer-plugins-base1.0-0"
# DPKG_ADD="$DPKG_ADD libxcb-shape0"
# DPKG_ADD="$DPKG_ADD libxcb-shm0"
# DPKG_ADD="$DPKG_ADD libxcb-xfixes0"
# DPKG_ADD="$DPKG_ADD libxcb-randr0"
# DPKG_ADD="$DPKG_ADD libxcb-image0"
# DPKG_ADD="$DPKG_ADD libfontconfig1"
# DPKG_ADD="$DPKG_ADD libgl1-mesa-glx"
# DPKG_ADD="$DPKG_ADD libxi6"
# DPKG_ADD="$DPKG_ADD libsm6"
# DPKG_ADD="$DPKG_ADD libxrender1"
# DPKG_ADD="$DPKG_ADD libpulse0"
# DPKG_ADD="$DPKG_ADD libxcomposite1"
# DPKG_ADD="$DPKG_ADD libxslt1.1"
# DPKG_ADD="$DPKG_ADD libsqlite3-0"
# DPKG_ADD="$DPKG_ADD libxcb-keysyms1"
# DPKG_ADD="$DPKG_ADD libxcb-xtest0"

# # Elasticsearch <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html>.
# DPKG_ADD="$DPKG_ADD elasticsearch" # felix `deb https://artifacts.elastic.co/packages/5.x/apt stable main` elasticsearch 5 <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html>, # apt-transport-https required by elasticsearch ppa <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html#deb-repo>
# DPKG_ADD="$DPKG_ADD apt-transport-https"

# # Google chrome <https://www.google.com/chrome>.
# DPKG_ADD="$DPKG_ADD apt-transport-https"
# DPKG_ADD="$DPKG_ADD google-chrome-stable" # instead installed by the appimage

# # never used Brave browser a-la google chrome <https://github.com/brave>.
# DPKG_ADD="$DPKG_ADD apt-transport-https"
# DPKG_ADD="$DPKG_ADD brave-browser" # a-la google chrome
# DPKG_ADD="$DPKG_ADD curl"
# DPKG_ADD="$DPKG_ADD gnupg"

# Er ozn.
# DPKG_ADD="$DPKG_ADD docker-ce" DPKG_DIS="docker" # instead installed from the homebrew # `curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb arch=amd64 https://download.docker.com/linux/ubuntu bionic stable"`
# DPKG_ADD="$DPKG_ADD golang" # instead installed go@1.17 from the homebrew
# DPKG_ADD="$DPKG_ADD libxml2-utils" # instead installed libxml2 from the homebrew # provides xmllint
# DPKG_ADD="$DPKG_ADD openvpn" DPKG_DIS="$DPKG_DIS systemctl DPKG_DIS openvpn openvpn@client" # NOTE: if your need openvpn instead installed from the homebrew # openvpn client <https://confluence.ozon.ru/pages/viewpage.action?spaceKey=CORPIT&title=OpenVPN+for+Linux>
# DPKG_ADD="$DPKG_ADD redis" DPKG_DIS="$DPKG_DIS redis-server" # instead installed from the homebrew
DPKG_ADD="$DPKG_ADD libpcap-dev" # required by github.com/google/gopacket/pcap (go/src/github.com/google/gopacket/pcap/pcap_unix.go:34:10: fatal error: pcap.h: No such file or directory)
DPKG_ADD="$DPKG_ADD libqt5webkit5" # GlobalProtect_UI_deb-5.2.6.0-18.deb VPN dependency
DPKG_ADD="$DPKG_ADD libxml2-dev"

# # Er rkt.
# # DPKG_ADD="$DPKG_ADD glide" # german does not use glide # go/german `add-apt-repository ppa:masterminds/glide` golang glide vendor package management <https://github.com/Masterminds/glide>
# DPKG_ADD="$DPKG_ADD docker-ce" DPKG_DIS="$DPKG_DIS docker" # instead installed from the homebrew # `curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && sudo add-apt-repository "deb arch=amd64 https://download.docker.com/linux/ubuntu bionic stable"`
# DPKG_ADD="$DPKG_ADD elasticsearch apt-transport-https" # felix `deb https://artifacts.elastic.co/packages/5.x/apt stable main` elasticsearch 5 <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html>, # apt-transport-https required by elasticsearch ppa <https://www.elastic.co/guide/en/elasticsearch/reference/current/deb.html#deb-repo>
# DPKG_ADD="$DPKG_ADD golang"
# DPKG_ADD="$DPKG_ADD libmagickwand-dev" # required by rmagick by felix
# DPKG_ADD="$DPKG_ADD libpcap-dev" # required by github.com/google/gopacket/pcap (go/src/github.com/google/gopacket/pcap/pcap_unix.go:34:10: fatal error: pcap.h: No such file or directory)
# DPKG_ADD="$DPKG_ADD network-manager-vpnc-gnome" # cisco vpn client plugin for the gnome
# DPKG_ADD="$DPKG_ADD openconnect" # vpnc/globalprotect compatible, ppa: <https://launchpad.net/~phusen/+archive/ubuntu/openconnect>
# DPKG_ADD="$DPKG_ADD openvpn" # openvpn client
# # DPKG_ADD="$DPKG_ADD postgresql-11" DPKG_DIS="$DPKG_DIS postgresql-11" # `deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main` <https://www.postgresql.org/download/linux/ubuntu>
# # DPKG_ADD="$DPKG_ADD postgresql-9.6" DPKG_DIS="$DPKG_DIS postgresql-9.6"  # felix `deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main` <https://www.postgresql.org/download/linux/ubuntu>
# DPKG_ADD="$DPKG_ADD redis" DPKG_DIS="$DPKG_DIS redis-server" # felix
# DPKG_ADD="$DPKG_ADD vpnc" # cisco vpn client
# # DPKG_ADD="$DPKG_ADD yarn" # (NOTE: before add ppa!) js package manager required by rails asset pipeline precompilation (before install add ppa <https://yarnpkg.com/lang/en/docs/install/#debian-stable>)

# APT (apt-get/aptitude) <https://en.wikipedia.org/wiki/APT_(software)>.
sh -c "$DPKG_REM_CLI $DPKG_REM" || exit 1
sh -c "$DPKG_ADD_CLI $DPKG_ADD" || exit 1
# sh -c "$DPKG_DIS_CLI $DPKG_DIS" || exit 1
