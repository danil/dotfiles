.TH XCHAINKEYS 1 "2010-09-16" "Linux" "User manuals"
.SH NAME
\fBxchainkeys\fP \- chained keybindings for X11
.SH SYNOPSIS
\fBxchainkeys\fP [\fIoptions\fP]
.SH DESCRIPTION
xchainkeys is a standalone X11 program to create chained key
bindings similar to those found in the \fBratpoison\fP(1) window
manager or the \fBscreen\fP(1) terminal multiplexer.
.SH OPTIONS
.IP \fB-f\fP,\ \fB--file\fP\ \fI<filename>\fP
Load an alternative configuration file.
.IP \fB-k\fP,\ \fB--keys\fP
Interactively show valid keyspecs for key combinations.
.IP \fB-d\fP,\ \fB--debug\fP
Show debug messages on stdout.
.IP \fB-h\fP,\ \fB--help\fP
Show usage information.
.IP \fB-v\fP,\ \fB--version\fP
Show version information.
.SH CONFIGURATION
The configuration file is located at 

\fI~/.config/xchainkeys/xchainkeys.conf\fP

The \fIXDG_CONFIG_HOME\fP environment variable will be respected in
compliance with the \fBXDG Base Directory Specification\fP (see
\fBREFERENCES\fP below).

An example configuration file has been installed to

\fI/home/danil/.local/share/doc/xchainkeys/example.conf\fP
.SS Syntax
Each line may contain either a global setting or a keybinding
definition. Empty lines and lines starting with a numbersign (#) are
ignored.
.SS Global Settings
Global settings are defined as key-value pairs, separated by
whitespace.
.IP \fBtimeout\fP\ \fI<n>\fP\ (default:\ \fB3000\fP)

Wait \fIn\fP milliseconds for another key to be pressed before
aborting an active keychain. A value of 0 will prevent automatic
timeout. This value may be overridden by a \fBtimeout\fP argument
supplied to an \fB:enter\fP action, see \fBActions\fP below.
.IP \fBfeedback\fP\ \fI<\fBon\fP|\fBoff\fP>\fP\ (default:\ \fBon\fP)

Show feedback in a small popup window.
.IP \fBdelay\fP\ \fI<n>\fP\ (default:\ \fB1000\fP)

Show current chain status after \fIn\fP milliseconds of inactivity
in an active chain.
.IP \fBhold\fP\ \fI<n>\fP\ (default:\ \fI<delay>\fP)

Show error messages for \fIn\fP milliseconds after a chain has been
aborted. If not set, the value of \fBdelay\fP will be used.
.IP \fBposition\fP\ \fI<x|offset|\fBmouse\fP|\fBcenter\fP>\ [\fI<y>\fP]\ (default:\ \fBcenter\fP)

The position of the feedback window. An absolute position can be
specified with the \fIx\fP and \fIy\fP arguments. A relative position
can be specified using the offset portion of a standard X geometry
string. The value \fBmouse\fP will cause the window to appear centered
around the current mouse pointer position. The value \fBcenter\fP will
center the window on the default screen.
.IP \fBfont\fP\ \fI<fontstring>\fP\ (default:\ \fBfixed\fP)

The X11 font to use for text in the feedback window.
.IP \fBforeground\fP\ \fI<name|#rrggbb>\fP\ (default:\ \fBblack\fP)

The foreground color of the text and the border of the feedback window.
.IP \fBbackground\fP\ \fI<name|#rrggbb>\fP\ (default:\ \fBwhite\fP)

The background color of the feedback window.
.SS Keybindings
Keybindings are defined using the following syntax:

    \fI<keyspec>\fP \fB[\fP\fI<keyspec>\fP\fB...]\fP :\fI<action>\fP \fB[\fP"\fI<name>\fP"\fB]\fP\ \fB[\fP\fI<arguments>\fP\fB...]\fP

A \fIkeyspec\fP consists of one or more optional \fBmodifier names\fP,
followed by either a symbolic \fBkey name\fP or a numeric keycode,
each separated by a hyphen (-):

    \fI<mod>\fP-\fB[\fP\fI<mod>\fP-\fB...]\fP\fI<keyname|keycode>\fP

Modifier names:

.RS	
    \fIS\fP, \fIShift\fP                    = Shift key
    \fIC\fP, \fICtrl\fP                     = Control key
    \fIA\fP, \fIM\fP, \fIAlt\fP, \fIMeta\fP             = Alt key
    \fIW\fP, \fIH\fP, \fISuper\fP, \fIHyper\fP, \fIWindows\fP = Super key
.RE

The generic modifier names \fIShift\fP, \fILock\fP, \fIControl\fP,
\fIMod1\fP, \fIMod2\fP, \fIMod3\fP, \fIMod4\fP and \fIMod5\fP are
recognized in addition to the above.

Key names correspond to the symbolic key names defined in
\fI/usr/include/X11/keysymdef.h\fP (with their \fIXK_\fP prefix
removed).

Numeric keycodes may be supplied in decimal, hexadecimal or octal
format, e.g. 16 (decimal) = 0x10 (hexadecimal) = 020 octal.

You can use \fBxchainkeys -k\fP to find the proper \fIkeyspec\fP for
key combinations.
.SS Actions

.IP \fB:enter\fP\ [\fBtimeout=\fP\fI<n>\fP]\ [\fBabort=\fP\fI<auto|manual>\fP]

Enters a keychain. The keyboard will be grabbed exclusively until
another keystroke has been processed, or until the chain times out
after \fIn\fP milliseconds. If the key is bound within this chain,
the associated action will be invoked, otherwise the user will be
notified that an unbound key has been pressed.

If the \fPabort\fP argument is set to \fImanual\fP, the chain prefix
will remain activated and further keystrokes will be processed until
the chain is manually aborted with the \fB:abort\fP action. If set to
\fIauto\fP (the default), the chain will abort immediately after the
first keystroke has been processed.

If the \fBtimeout\fP argument is omitted, the global timeout setting
will apply. A value of \fI0\fP disables the timeout for this chain.
.IP \fB:abort\fP
Abort the current keychain, releasing any previous grab on the
keyboard. If not explicitly bound, \fB:abort\fP will be bound to
\fBprefix C-g\fP by default.
.IP \fB:escape\fP
Send the \fBprefix key\fP key of this chain to the currently focused
window and abort the chain. If not explicitly bound, \fB:escape\fP
will be bound to \fBprefix prefix\fP, e.g. for a chain prefixed with
\fBC-t\fP the \fB:escape\fP action will be bound to \fBC-t C-t\fP by
default.

This feature is implemented using \fBXSendEvent(3)\fP. Note that
applications may refuse to accept synthetic events generated with
\fBXSendEvent\fP.
.IP \fB:exec\fP\ [\fBabort=\fP\fIauto\fP]\ \fI<command>\fP
Asynchronously execute \fIcommand\fP as a shell command. If
\fBabort=\fP\fIauto\fP is given, this binding will always abort the
current chain after executing the command, even if the chain was
entered with \fBabort=\fP\fImanual\fP.
.IP \fB:wait\fP\ \fI<command>\fP
Ungrab the keyboard, execute \fIcommand\fP as a shell command, wait
until the \fIcommand\fP has completed and grab the keyboard again if
necessary. Use this action to run commands that also grab the keyboard
(e.g. \fIscrot --select\fP).
.IP \fB:group\fP\ \fB[\fP"\fI<name>\fP"\fB]\fP\ [\fBabort=\fP\fIauto\fP]\ \fI<command>\fP
Associate a binding with a named group and asynchronously execute
\fIcommand\fP as a shell command.

When a \fB:group\fP action is activated, timeout and automatic abort
are disabled for the current chain prefix, and only bindings in the
same group will be recognized for subsequent key presses. Any other
keys will abort the chain and revert the above changes.

If \fBabort=\fP\fIauto\fP is given for particular binding within a
group, this binding will always abort the current chain after
executing the command, effectively overriding the implied
\fBabort=\fP\fImanual\fP option.

In addition, if the key used to abort the chain key is a toplevel
chain \fBprefix key\fP, the corresponding chain will be entered
immediately after this chain aborts. See \fBEXAMPLES\fP below for
possible uses.

If no explicit name is given, the group name "default" is used.

.IP \fB:repeat\fP\ \fI<command>\fP
Deprecated. Equivalent to \fB:group\fP \fB"default"\fP.
.IP \fB:load\fP\ [\fI<filename>\fP]
.IP \fB:reload\fP\ [\fI<filename>\fP]
Clear the current bindings and (re)load the configuration file specified
by \fIfilename\fP. If no file is specified, the current configuration
file is reloaded.
.SH EXAMPLES
Bind the key sequence "Control-t Return" to run xterm:\fP

     C-t Return :exec xterm

\fPThis implies creating a default chain with the prefix key
\fBC-t\fP, containing default bindings for the \fB:abort\fP and
\fB:escape\fP actions, and is thus equivalent to\fB

    C-t :enter timeout=3000 abort=auto
    C-t C-t :escape                   
    C-t C-g :abort                    
    C-t Return :exec xterm            

\fPNote that the number of keys in a keychain is not limited, e.g\fB

     C-t x c h a i n k e y s :exec xmessage "xchainkeys!"

\fPcan be invoked by pressing \fBC-t\fP and then typing "xchainkeys". 

The following example creates a named \fP:group\fP of bindings to
implement a dedicated frame resize mode for the \fBmusca\fP(1) window
manager:\fB

     C-w i :group "resize" musca -c 'resize up'
     C-w k :group "resize" musca -c 'resize down'
     C-w j :group "resize" musca -c 'resize left'
     C-w l :group "resize" musca -c 'resize right'

     C-w ... (other bindings for window management)

\fPInvoke any of the above bindings (e.g. press \fBC-w i\fP) and then
continue to press \fBi\fP, \fBk\fP, \fBj\fP or \fBl\fP to resize the
current musca frame. Since timeout and automatic abort are disabled,
you can continue resizing until you are satisfied with the
result. Then simply press any other key to quit resize mode. If
you want to invoke another window management command right away, you
can use \fBC-w\fP to quit resize mode and immediately enter the
\fBC-w\fP chain (or any other toplevel chain) again.

The benefit of using a named \fB:group\fP over a dedicated chain with
\fBtimeout=0\fP and \fBabort=manual\fP is that you don't have to waste
another prefix key. Instead you can temporarily redefine an existing
chain to contain only a specific subset of keys, behaving in the
desired manner.
.SH KNOWN ISSUES
Some window managers assume that no other program has grabbed any
global key combinations before them, and may fail with a fatal error
when trying to grab a key that has already been grabbed as a prefix
key by xchainkeys. This situation is likely to occur when xchainkeys
is started before the window manager in \fI~/.xinitrc\fP. 

In general, binding the same key combinations in xchainkeys and other
programs should be avoided.
.SH BUGS
This software is currently in beta state. Please file bugs on the
googlecode issue tracker.

http://code.google.com/p/xchainkeys/issues

Use the email address below for questions, feature requests and
comments.
.SH COPYRIGHT
Copyright (C) 2010-2012 Henning Bekel <h.bekel@googlemail.com>
.SH LICENSE
xchainkeys is licensed under the GNU General Public License v3, see
http://www.gnu.org/licenses/gpl.html.
.SH REFERENCES
.IP \fBX11\ key\ symbols\fP
/usr/include/X11/keysymdef.h
.IP \fBXDG\ Base\ Directory\ Specification\fP
http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
.SH "SEE ALSO"
.BR Xorg (1)
.BR screen (1)
.BR ratpoison (1)
.BR musca (1)
