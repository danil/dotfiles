(:name ruby-tools
       :description "Collection of handy functions for Emacs ruby-mode"
       :website "https://github.com/rejeep/ruby-tools"
       :type github
       :pkgname "rejeep/ruby-tools"
       :after (progn
                (add-hook 'awk-mode-hook 'ruby-tools-mode)
                (add-hook 'coffee-mode-hook 'ruby-tools-mode)
                (add-hook 'conf-mode-hook 'ruby-tools-mode)
                (add-hook 'conf-space-mode-hook 'ruby-tools-mode)
                (add-hook 'conf-xdefaults-mode-hook 'ruby-tools-mode)
                (add-hook 'css-mode-hook 'ruby-tools-mode)
                (add-hook 'emacs-lisp-mode-hook 'ruby-tools-mode)
                (add-hook 'haml-mode-hook 'ruby-tools-mode)
                (add-hook 'haskell-mode-hook 'ruby-tools-mode)
                (add-hook 'html-mode-hook 'ruby-tools-mode)
                (add-hook 'java-mode-hook 'ruby-tools-mode)
                (add-hook 'js-mode-hook 'ruby-tools-mode)
                (add-hook 'lisp-mode-hook 'ruby-tools-mode)
                (add-hook 'lua-mode-hook 'ruby-tools-mode)
                (add-hook 'makefile-gmake-mode-hook 'ruby-tools-mode)
                (add-hook 'markdown-mode-hook 'ruby-tools-mode)
                (add-hook 'nxml-mode-hook 'ruby-tools-mode)
                (add-hook 'org-mode-hook 'ruby-tools-mode)
                (add-hook 'perl-mode-hook 'ruby-tools-mode)
                (add-hook 'php-mode-hook 'ruby-tools-mode)
                (add-hook 'rhtml-mode-hook 'ruby-tools-mode)
                (add-hook 'ruby-mode-hook 'ruby-tools-mode)
                (add-hook 'sass-mode-hook 'ruby-tools-mode)
                (add-hook 'scss-mode-hook 'ruby-tools-mode)
                (add-hook 'sgml-mode-hook 'ruby-tools-mode)
                (add-hook 'sh-mode-hook 'ruby-tools-mode)
                (add-hook 'shell-mode-hook 'ruby-tools-mode)
                (add-hook 'sql-mode-hook 'ruby-tools-mode)
                (add-hook 'xml-mode-hook 'ruby-tools-mode)
                (add-hook 'yaml-mode-hook 'ruby-tools-mode)

                (eval-after-load 'ruby-tools
                  '(progn
                     ;; Remove keys from a minor-mode keymap
                     ;; <http://stackoverflow.com/questions/7598433/how-to-remove-a-key-from-a-minor-mode-keymap-in-emacs#7598754>.
                     (define-key ruby-tools-mode-map (kbd "C-'")  nil)
                     (define-key ruby-tools-mode-map (kbd "C-\"") nil)
                     (define-key ruby-tools-mode-map (kbd "C-:")  nil)
                     (define-key ruby-tools-mode-map (kbd "C-;")  nil)
                     (define-key ruby-tools-mode-map (kbd "#")    nil)

                     (define-key ruby-tools-mode-map (kbd "C-c r '")  'ruby-tools-to-single-quote-string)
                     (define-key ruby-tools-mode-map (kbd "C-c r \"") 'ruby-tools-to-double-quote-string)
                     (define-key ruby-tools-mode-map (kbd "C-c r :")  'ruby-tools-to-symbol)
                     (define-key ruby-tools-mode-map (kbd "C-c r ;")  'ruby-tools-clear-string)
                     (define-key ruby-tools-mode-map (kbd "C-c r #")  'ruby-tools-interpolate)
                     ))
                ))
