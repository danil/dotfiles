(my-after-init
  (global-set-key (my-kbd "b b") 'bury-buffer-with-repeat)
  (global-set-key (my-kbd "b r") 'rename-buffer)
  (global-set-key (my-kbd "b s") 'my-do-shell-command-on-buffer-file)
  (defun bury-buffer-with-repeat ()
    (interactive)
    (my-with-repeat-while-press-last-key
      (bury-buffer))))

;;; Prompts and run command with file (associated to current buffer)
;;; path as argument
;;; <http://superuser.com/questions/360427/emacs-equivalent-of-this-vim-command-to-run-my-tests#360512>.
(defun my-do-shell-command-on-buffer-file ()
  "Prompts for a command and executes that command on to the associated
 file of current buffer. If no buffer is associated gives an error"
  (interactive)
  (or (buffer-file-name) (error "no file is associated file to this buffer"))
  (let* ((my-cmd (read-shell-command "Command to run: "))
         (cmd-to-run (concat my-cmd " " (replace-regexp-in-string
                                         "/sudo[^/]+?/"
                                         "/"
                                         (buffer-file-name)))))
    (shell-command cmd-to-run)))
(defun my-do-shell-command-on-current-path ()
  "Prompts for a command and executes that command"
  (interactive)
  (let* ((my-cmd (read-shell-command "Command to run: "))
         (cmd-to-run (concat my-cmd)))
    (shell-command cmd-to-run)))
